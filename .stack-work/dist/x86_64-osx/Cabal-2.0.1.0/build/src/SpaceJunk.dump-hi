
==================== FINAL INTERFACE ====================
2018-03-20 10:47:38.727636 UTC

interface demo-space-junk-0.1-HfePqCa4RzZA9RYPINVpCh:SpaceJunk 8022
  interface hash: c3bbaaf850fbbcceb3d9cea38f0132db
  ABI hash: 81b49428b3f8891bf39ce7ba329fddc1
  export-list hash: 997f66f72a46f3726011c8b6fc4061bb
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 0451a77cc0d8e5d99d548d6441c7dd35
  sig of: Nothing
  used TH splices: False
  where
exports:
  SpaceJunk.canGo
  SpaceJunk.chanceCard
  SpaceJunk.changeBalance
  SpaceJunk.changePlayerCell
  SpaceJunk.doStep
  SpaceJunk.drawGameState
  SpaceJunk.drawPayMenu
  SpaceJunk.drawPiece
  SpaceJunk.drawPlayingField
  SpaceJunk.getPlayerPosition
  SpaceJunk.getPriceRent
  SpaceJunk.getTypeCell
  SpaceJunk.handleGame
  SpaceJunk.handlePay
  SpaceJunk.initCards
  SpaceJunk.initGame
  SpaceJunk.initPay
  SpaceJunk.isPay
  SpaceJunk.isStep
  SpaceJunk.isntPay
  SpaceJunk.loadImages
  SpaceJunk.makeMove
  SpaceJunk.makePay
  SpaceJunk.makeStepFeatures
  SpaceJunk.move
  SpaceJunk.movePlayer
  SpaceJunk.payPrictRent
  SpaceJunk.payTax
  SpaceJunk.satelliteRotationSpeed
  SpaceJunk.screenHeight
  SpaceJunk.screenWidth
  SpaceJunk.startGame
  SpaceJunk.streetMove
  SpaceJunk.throwCubes
  SpaceJunk.ufoAccel
  SpaceJunk.updateGameState
  SpaceJunk.updatePay
  SpaceJunk.Cards
  SpaceJunk.ChanceCard{SpaceJunk.ChanceCard num price2 text2}
  SpaceJunk.Cubes{SpaceJunk.Cubes firstCube secondCube}
  SpaceJunk.GameState{SpaceJunk.GameState cubes gamePlayer haveWinner land players typeStep}
  SpaceJunk.Images{SpaceJunk.Images imagePayMenu imagePieceBlue imagePieceGreen imagePieceRed imagePieceYellow imagePlayingField}
  SpaceJunk.Physical{SpaceJunk.getCell SpaceJunk.getPosition SpaceJunk.setCell SpaceJunk.setPosition}
  SpaceJunk.Player{SpaceJunk.Player colour money playerCell playerPosition property}
  SpaceJunk.Street{SpaceJunk.Street isRent name owner price priceRent}
module dependencies:
package dependencies: GLURaw-2.0.0.3 GLUT-2.7.0.12
                      JuicyPixels-3.2.9.4 ObjectName-1.1.0.1 OpenGL-3.0.2.0
                      OpenGLRaw-3.2.7.0 StateVar-1.1.0.4 array-0.5.2.0 base-4.10.1.0
                      binary-0.8.5.1 bmp-1.2.6.3 bytestring-0.10.8.2 containers-0.5.10.2
                      deepseq-1.4.3.0 fixed-0.2.1.1 ghc-prim-0.5.1.1 gloss-1.11.1.1
                      gloss-juicy-0.2.2 gloss-rendering-1.11.1.1 half-0.2.2.3
                      integer-gmp-1.0.1.0 mtl-2.2.1 primitive-0.6.3.0 stm-2.4.5.0
                      text-1.2.2.2 transformers-0.5.2.0 vector-0.12.0.1 zlib-0.6.1.2
orphans: vector-0.12.0.1:Data.Vector.Unboxed
         gloss-rendering-1.11.1.1:Graphics.Gloss.Internals.Data.Picture
         stm-2.4.5.0:Control.Monad.STM text-1.2.2.2:Data.Text
         binary-0.8.5.1:Data.Binary.Generic text-1.2.2.2:Data.Text.Show
         bytestring-0.10.8.2:Data.ByteString.Builder
         vector-0.12.0.1:Data.Vector.Fusion.Bundle
         transformers-0.5.2.0:Control.Monad.Trans.Error
         base-4.10.1.0:GHC.Float base-4.10.1.0:GHC.Base
family instance modules: JuicyPixels-3.2.9.4:Codec.Picture.Tga
                         JuicyPixels-3.2.9.4:Codec.Picture.Tiff
                         JuicyPixels-3.2.9.4:Codec.Picture.Types
                         base-4.10.1.0:Control.Applicative base-4.10.1.0:Data.Complex
                         base-4.10.1.0:Data.Either base-4.10.1.0:Data.Functor.Compose
                         base-4.10.1.0:Data.Functor.Const
                         base-4.10.1.0:Data.Functor.Identity
                         base-4.10.1.0:Data.Functor.Product base-4.10.1.0:Data.Functor.Sum
                         base-4.10.1.0:Data.List.NonEmpty base-4.10.1.0:Data.Monoid
                         base-4.10.1.0:Data.Semigroup base-4.10.1.0:Data.Type.Equality
                         base-4.10.1.0:Data.Version base-4.10.1.0:Data.Void
                         base-4.10.1.0:GHC.Exts base-4.10.1.0:GHC.Generics
                         base-4.10.1.0:GHC.IO.Exception base-4.10.1.0:GHC.TypeLits
                         base-4.10.1.0:GHC.TypeNats containers-0.5.10.2:Data.IntMap.Internal
                         containers-0.5.10.2:Data.IntSet.Internal
                         containers-0.5.10.2:Data.Map.Internal
                         containers-0.5.10.2:Data.Sequence.Internal
                         containers-0.5.10.2:Data.Set.Internal containers-0.5.10.2:Data.Tree
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.Array
                         primitive-0.6.3.0:Data.Primitive.ByteArray text-1.2.2.2:Data.Text
                         vector-0.12.0.1:Data.Vector vector-0.12.0.1:Data.Vector.Primitive
                         vector-0.12.0.1:Data.Vector.Storable
                         vector-0.12.0.1:Data.Vector.Unboxed
                         vector-0.12.0.1:Data.Vector.Unboxed.Base
                         zlib-0.6.1.2:Codec.Compression.Zlib.Stream
import  -/  base-4.10.1.0:Data.Foldable 9ed87455d68e87ff2b5b8725eae9897e
import  -/  base-4.10.1.0:GHC.Base 782fd99b5e36f3698a26179a49afca64
import  -/  base-4.10.1.0:GHC.List e3060fbeb44ce0038e6b4dedf2dd9cf1
import  -/  base-4.10.1.0:GHC.Num 6e1dc5d36d99a802edb39b92bb1923b8
import  -/  base-4.10.1.0:GHC.Real 3c62834bc25e762eabc44149c4cc142d
import  -/  base-4.10.1.0:Prelude 31945b7d0084063347fc52506d3a4020
import  -/  ghc-prim-0.5.1.1:GHC.Classes 93e2660065dce9329577e83d76d8f0d4
import  -/  ghc-prim-0.5.1.1:GHC.Types b1fd0716441595db508c1a74387bf394
import  -/  gloss-1.11.1.1:Graphics.Gloss.Data.Color b7424de5bb205cca1a09501f98c59664
import  -/  gloss-1.11.1.1:Graphics.Gloss.Data.Display 1752ab407945af39220fa83fbf976e16
import  -/  gloss-1.11.1.1:Graphics.Gloss.Data.Picture 0c9db8efb71853e503896b57a301b5c6
import  -/  gloss-1.11.1.1:Graphics.Gloss.Data.Vector 44dc1145b0e25cb800e2c55d0895dbe5
import  -/  gloss-1.11.1.1:Graphics.Gloss.Interface.Pure.Game 247150559a96abad68d2b57b64100a3e
import  -/  gloss-1.11.1.1:Graphics.Gloss.Internals.Interface.Backend.Types 06ea8efd16f2e1213f3498c72fd3e865
import  -/  gloss-1.11.1.1:Graphics.Gloss.Internals.Interface.Event f16844b468f3b0afda143b6d1f143412
import  -/  gloss-juicy-0.2.2:Graphics.Gloss.Juicy 46a9eca8d76b0eb9834882dca76d1776
import  -/  gloss-rendering-1.11.1.1:Graphics.Gloss.Internals.Data.Picture d666c96398fc251f92f60389aa7562f8
a3ee19505cebef944364f75aea4790ac
  $fPhysicalPlayer :: SpaceJunk.Physical SpaceJunk.Player
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ SpaceJunk.Player
                  SpaceJunk.playerPosition
                  SpaceJunk.playerCell
                  SpaceJunk.$fPhysicalPlayer_$csetPosition
                  SpaceJunk.$fPhysicalPlayer_$csetCell -}
2b77cc406f2fa857a82670c115c2774e
  $fPhysicalPlayer_$csetCell ::
    GHC.Types.Int -> SpaceJunk.Player -> SpaceJunk.Player
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U(U,U,U,A,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (new :: GHC.Types.Int) (player :: SpaceJunk.Player) ->
                 case player of wild { SpaceJunk.Player ds ds1 ds2 ds3 ds4 ->
                 SpaceJunk.Player ds ds1 ds2 new ds4 }) -}
d89c2e9086181491e308258fe76d469d
  $fPhysicalPlayer_$csetPosition ::
    Graphics.Gloss.Internals.Data.Picture.Point
    -> SpaceJunk.Player -> SpaceJunk.Player
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U(U,U,U,U,A)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (new :: Graphics.Gloss.Internals.Data.Picture.Point)
                   (player :: SpaceJunk.Player) ->
                 case player of wild { SpaceJunk.Player ds ds1 ds2 ds3 ds4 ->
                 SpaceJunk.Player ds ds1 ds2 ds3 new }) -}
7c2ebed32fee2d381cf3a14b3df95f29
  $tc'C:Physical :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3394432508075757034##
                   17580906439734967253##
                   SpaceJunk.$trModule
                   SpaceJunk.$tc'C:Physical2
                   1#
                   SpaceJunk.$tc'C:Physical1) -}
bf135df50b5ecf0053a113ae8a185df9
  $tc'C:Physical1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
552076412871479bc265f0eeb5fbafc1
  $tc'C:Physical2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS SpaceJunk.$tc'C:Physical3) -}
59b397a249204e7c75ae4a3ff796a84b
  $tc'C:Physical3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C:Physical"#) -}
f5cdaae2f58e9d79d9088eb816ae9370
  $tc'ChanceCard :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9667259301969283196##
                   16645082821157769002##
                   SpaceJunk.$trModule
                   SpaceJunk.$tc'ChanceCard2
                   0#
                   SpaceJunk.$tc'ChanceCard1) -}
eee6cf03a5fc012ee6c3828c4248b899
  $tc'ChanceCard1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
6d194ec60f58e82ccae45b9382cdf26b
  $tc'ChanceCard2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS SpaceJunk.$tc'ChanceCard3) -}
88e5e72029217b80f4d198dbae6c66b9
  $tc'ChanceCard3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ChanceCard"#) -}
c2672574296ac79c13dbb919f1c4125f
  $tc'Cubes :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7797716931399040929##
                   11622144014266575507##
                   SpaceJunk.$trModule
                   SpaceJunk.$tc'Cubes2
                   0#
                   SpaceJunk.$tc'Cubes1) -}
f9d0e086585794e629b43d0ff72a955d
  $tc'Cubes1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
145b07748d290387600631f71624b3c7
  $tc'Cubes2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS SpaceJunk.$tc'Cubes3) -}
2f58727f72667cae272b7fea616fbf53
  $tc'Cubes3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Cubes"#) -}
14af19127f4d8e1e4f851a2eb3c5a96d
  $tc'GameState :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2720502980593999393##
                   2809409099418521767##
                   SpaceJunk.$trModule
                   SpaceJunk.$tc'GameState2
                   0#
                   SpaceJunk.$tc'GameState1) -}
f86a6dc1d6beeb91318fa28ae6dcd6d1
  $tc'GameState1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
fb4463ae9e0b1ecdd4762413993ffb05
  $tc'GameState2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS SpaceJunk.$tc'GameState3) -}
0c85ba759eb4d9aa60f21c8ad44cfe0b
  $tc'GameState3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GameState"#) -}
0fc562b1788f90ff1422865a5084c50c
  $tc'Images :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7134652861729503437##
                   536247177849254664##
                   SpaceJunk.$trModule
                   SpaceJunk.$tc'Images2
                   0#
                   SpaceJunk.$tc'Images1) -}
e4f1bac1c19110336c9b7361af2e61aa
  $tc'Images1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
7661d0f4925d6fc66b396f4c24ccd151
  $tc'Images2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS SpaceJunk.$tc'Images3) -}
52e5f91f2f780cc555b6ec8916079174
  $tc'Images3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Images"#) -}
96d019f7dfb2cea3d75fe8235e7176c1
  $tc'Player :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8164825687174012710##
                   10226978588090699068##
                   SpaceJunk.$trModule
                   SpaceJunk.$tc'Player2
                   0#
                   SpaceJunk.$tc'Player1) -}
100f58d6df103b7837bbfd7d8f75c3c5
  $tc'Player1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
7f80e2b3e5671e53e0b2d5c0960568bb
  $tc'Player2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS SpaceJunk.$tc'Player3) -}
fdaaf5ba4c1265df31b21a1ff48c5a11
  $tc'Player3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Player"#) -}
f99ff7fa2bd9d71386363848f8f6fd2c
  $tc'Street :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14669608976624484016##
                   6630514924888247945##
                   SpaceJunk.$trModule
                   SpaceJunk.$tc'Street2
                   0#
                   SpaceJunk.$tc'Street1) -}
49c1c057e32339c4f633bdff1ce17379
  $tc'Street1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
67c9f8d513bcb6aec1393a5a9e0f68e1
  $tc'Street2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS SpaceJunk.$tc'Street3) -}
98563b129c0ff02542513cc6630893fc
  $tc'Street3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Street"#) -}
20e5901a8578a000df64cee5c6ccf8db
  $tcChanceCard :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1605081744249956535##
                   10487318430078386702##
                   SpaceJunk.$trModule
                   SpaceJunk.$tcChanceCard1
                   0#
                   GHC.Types.krep$*) -}
a2f2d5b4f98fa9c3639c6ab20e5caee0
  $tcChanceCard1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS SpaceJunk.$tcChanceCard2) -}
b6756495333749a85d75b6637e447bc2
  $tcChanceCard2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ChanceCard"#) -}
ed5438cd0ad8bea1fd011eec8d28168f
  $tcCubes :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2372349930001482578##
                   14257026668100213066##
                   SpaceJunk.$trModule
                   SpaceJunk.$tcCubes1
                   0#
                   GHC.Types.krep$*) -}
6446091c8909982b71d5f85db54e55ac
  $tcCubes1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS SpaceJunk.$tcCubes2) -}
8d8f4d4f611b58ed0c05c2f80e2ef0c5
  $tcCubes2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Cubes"#) -}
807ead5dd4beb3373fec2c73a84fefa7
  $tcGameState :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8769246809315220019##
                   5585082966041346212##
                   SpaceJunk.$trModule
                   SpaceJunk.$tcGameState1
                   0#
                   GHC.Types.krep$*) -}
3b72a8c341d5066f6f23d50f4287b63c
  $tcGameState1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS SpaceJunk.$tcGameState2) -}
fa7651f729415c68f4f3402e822199f7
  $tcGameState2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("GameState"#) -}
0926b9b32ce10585fea55dc4ef3f6026
  $tcImages :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11063933512372823573##
                   6502428208372042336##
                   SpaceJunk.$trModule
                   SpaceJunk.$tcImages1
                   0#
                   GHC.Types.krep$*) -}
066664a53e0cf7ef044ed17e8c166bb4
  $tcImages1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS SpaceJunk.$tcImages2) -}
e13ba9f1d9b38ca5865e928d6d0be84e
  $tcImages2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Images"#) -}
f7d43b149c33e0fe23bd28ec13b9d274
  $tcPhysical :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13230888544532279213##
                   2315442903441447646##
                   SpaceJunk.$trModule
                   SpaceJunk.$tcPhysical2
                   0#
                   SpaceJunk.$tcPhysical1) -}
23905d4f70e073f48d2c401fc3f21fb2
  $tcPhysical1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
9826fdd08f9e4b738258a9ef3d0dc5fe
  $tcPhysical2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS SpaceJunk.$tcPhysical3) -}
76ae40babc1a622188dd6f0ca47e17e6
  $tcPhysical3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Physical"#) -}
fa5c9eebdca7e1ca8bd8490455942c12
  $tcPlayer :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9515458276217406701##
                   17247916109989906326##
                   SpaceJunk.$trModule
                   SpaceJunk.$tcPlayer1
                   0#
                   GHC.Types.krep$*) -}
4468ddbb8a4a0f0f84af3ae874eb836a
  $tcPlayer1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS SpaceJunk.$tcPlayer2) -}
9a204064664006b074109be0ebdb156f
  $tcPlayer2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Player"#) -}
c6a3d3be469dd66bb1ac704d5cdffb7b
  $tcStreet :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11038757159187155411##
                   12588971124473832168##
                   SpaceJunk.$trModule
                   SpaceJunk.$tcStreet1
                   0#
                   GHC.Types.krep$*) -}
e86c4b367136bbd2465e7871ee385445
  $tcStreet1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS SpaceJunk.$tcStreet2) -}
b3ca0e3d3cf2bbfb4ef7145b740f9380
  $tcStreet2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Street"#) -}
8737f5b10e93b7a649fc86b68b035d45
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   SpaceJunk.$trModule3
                   SpaceJunk.$trModule1) -}
58036815393a4e006935cea89cde3420
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS SpaceJunk.$trModule2) -}
85bb248ec2edb5b86cb09bcb67f33727
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("SpaceJunk"#) -}
03be0a72021697e177b779e920f5592d
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS SpaceJunk.$trModule4) -}
80da9ce40ada352650a012d3a6f3bf46
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("demo-space-junk-0.1-HfePqCa4RzZA9RYPINVpCh"#) -}
14452e6f440a47fb3c9102c1ace937de
  $wchangePlayerCell ::
    [SpaceJunk.Player]
    -> GHC.Types.Int
    -> GHC.Base.Maybe GHC.Types.Int
    -> SpaceJunk.Cubes
    -> [SpaceJunk.Street]
    -> (# [SpaceJunk.Player], GHC.Types.Int,
          GHC.Base.Maybe GHC.Types.Int, SpaceJunk.Cubes, [SpaceJunk.Street],
          GHC.Base.String #)
  {- Arity: 5, Strictness: <L,U><L,U(U)><L,U><L,U(U(U),U(U))><L,U>,
     Inline: [0],
     Unfolding: (\ (ww :: [SpaceJunk.Player])
                   (ww1 :: GHC.Types.Int)
                   (ww2 :: GHC.Base.Maybe GHC.Types.Int)
                   (ww3 :: SpaceJunk.Cubes)
                   (ww4 :: [SpaceJunk.Street]) ->
                 let {
                   cubesSum :: GHC.Types.Int
                   = case ww3 of wild { SpaceJunk.Cubes ds ds1 ->
                     case ds of wild1 { GHC.Types.I# x ->
                     case ds1 of wild2 { GHC.Types.I# y ->
                     GHC.Types.I# (GHC.Prim.+# x y) } } }
                 } in
                 let {
                   player :: SpaceJunk.Player
                   = case ww1 of wild { GHC.Types.I# x ->
                     GHC.List.$w!! @ SpaceJunk.Player ww (GHC.Prim.-# x 1#) }
                 } in
                 (# case ww1 of wild { GHC.Types.I# x ->
                    let {
                      y :: GHC.Prim.Int# = GHC.Prim.-# x 1#
                    } in
                    let {
                      n :: SpaceJunk.Player
                      = case player of ww5 { SpaceJunk.Player ww6 ww7 ww8 ww9 ww10 ->
                        SpaceJunk.Player
                          ww6
                          ww7
                          ww8
                          (case ww9 of wild1 { GHC.Types.I# x1 ->
                           case cubesSum of wild2 { GHC.Types.I# y1 ->
                           case GHC.Classes.modInt#
                                  (GHC.Prim.-# (GHC.Prim.+# x1 y1) 1#)
                                  40# of ww11 { DEFAULT ->
                           GHC.Types.I# (GHC.Prim.+# ww11 1#) } } })
                          (case ww9 of wild1 { GHC.Types.I# x1 ->
                           case cubesSum of wild2 { GHC.Types.I# y1 ->
                           case GHC.Classes.modInt#
                                  (GHC.Prim.-# (GHC.Prim.+# x1 y1) 1#)
                                  40# of ww11 { DEFAULT ->
                           case SpaceJunk.$wgetPlayerPosition
                                  wild
                                  (GHC.Prim.+# ww11 1#) of ww12 { (#,#) ww13 ww14 ->
                           (ww13, ww14) } } } }) }
                    } in
                    let {
                      n1 :: [SpaceJunk.Player]
                      = case GHC.List.$wlenAcc
                               @ SpaceJunk.Player
                               ww
                               0# of ww5 { DEFAULT ->
                        let {
                          y1 :: GHC.Prim.Int# = GHC.Prim.-# ww5 x
                        } in
                        case GHC.Prim.tagToEnum#
                               @ GHC.Types.Bool
                               (GHC.Prim.<# 0# y1) of wild1 {
                          GHC.Types.False -> SpaceJunk.changePlayerCell21
                          GHC.Types.True
                          -> GHC.List.reverse1
                               @ SpaceJunk.Player
                               (GHC.List.$wunsafeTake
                                  @ SpaceJunk.Player
                                  y1
                                  (GHC.List.reverse1
                                     @ SpaceJunk.Player
                                     ww
                                     (GHC.Types.[] @ SpaceJunk.Player)))
                               (GHC.Types.[] @ SpaceJunk.Player) } }
                    } in
                    let {
                      n2 :: [SpaceJunk.Player] = GHC.Types.: @ SpaceJunk.Player n n1
                    } in
                    case GHC.Prim.tagToEnum#
                           @ GHC.Types.Bool
                           (GHC.Prim.<# 0# y) of wild1 {
                      GHC.Types.False -> n2
                      GHC.Types.True
                      -> letrec {
                           $wgo :: [SpaceJunk.Player] -> GHC.Prim.Int# -> [SpaceJunk.Player]
                             {- Arity: 2, Strictness: <S,1*U><L,1*U>, Inline: [0] -}
                           = \ (w :: [SpaceJunk.Player]) (ww5 :: GHC.Prim.Int#) ->
                             case w of wild2 {
                               [] -> n2
                               : y1 ys
                               -> case ww5 of ds1 {
                                    DEFAULT
                                    -> GHC.Types.:
                                         @ SpaceJunk.Player
                                         y1
                                         ($wgo ys (GHC.Prim.-# ds1 1#))
                                    1# -> GHC.Types.: @ SpaceJunk.Player y1 n2 } }
                         } in
                         $wgo ww y } },
                    ww1, ww2, ww3, ww4,
                    case player of ww5 { SpaceJunk.Player ww6 ww7 ww8 ww9 ww10 ->
                    case ww9 of wild { GHC.Types.I# x ->
                    case cubesSum of wild1 { GHC.Types.I# y ->
                    case GHC.Classes.modInt#
                           (GHC.Prim.-# (GHC.Prim.+# x y) 1#)
                           40# of ww11 { DEFAULT ->
                    SpaceJunk.$wgetTypeCell
                      (GHC.Prim.+# ww11 1#)
                      (SpaceJunk.GameState
                         ww
                         ww1
                         ww2
                         ww3
                         ww4
                         SpaceJunk.changePlayerCell1) } } } } #)) -}
1dd9e47dabb3418231ecc0bfc3b5f172
  $wdrawGameState ::
    SpaceJunk.Images
    -> [SpaceJunk.Player]
    -> GHC.Base.String
    -> Graphics.Gloss.Internals.Data.Picture.Picture
  {- Arity: 3, Strictness: <L,U(1*U,1*U,1*U,1*U,1*U,1*U)><L,U><S,U>,
     Inline: [0] -}
455dd7b0111803e958e2daedaa9316f5
  $wgetPlayerPosition ::
    GHC.Types.Int
    -> GHC.Prim.Int# -> (# GHC.Types.Float, GHC.Types.Float #)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U(U)><S,U>,
     Inline: [0],
     Unfolding: (\ (w :: GHC.Types.Int) (ww :: GHC.Prim.Int#) ->
                 let {
                   $j :: (# GHC.Types.Float, GHC.Types.Float #) <join 0>
                   = let {
                       $j1 :: (# GHC.Types.Float, GHC.Types.Float #) <join 0>
                       = case GHC.Prim.tagToEnum#
                                @ GHC.Types.Bool
                                (GHC.Prim.>=# ww 22#) of wild {
                           GHC.Types.False
                           -> (# GHC.Types.F#
                                   (GHC.Prim.int2Float#
                                      (GHC.Prim.-# 365# (GHC.Prim.*# (GHC.Prim.-# ww 30#) 60#))),
                                 case w of wild1 { GHC.Types.I# x ->
                                 GHC.Types.F#
                                   (GHC.Prim.int2Float#
                                      (GHC.Prim.+# -360# (GHC.Prim.*# x 15#))) } #)
                           GHC.Types.True
                           -> case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.<=# ww 31#) of wild1 {
                                GHC.Types.False
                                -> (# GHC.Types.F#
                                        (GHC.Prim.int2Float#
                                           (GHC.Prim.-#
                                              365#
                                              (GHC.Prim.*# (GHC.Prim.-# ww 30#) 60#))),
                                      case w of wild2 { GHC.Types.I# x ->
                                      GHC.Types.F#
                                        (GHC.Prim.int2Float#
                                           (GHC.Prim.+# -360# (GHC.Prim.*# x 15#))) } #)
                                GHC.Types.True
                                -> (# case w of wild2 { GHC.Types.I# x ->
                                      GHC.Types.F#
                                        (GHC.Prim.int2Float#
                                           (GHC.Prim.-# 360# (GHC.Prim.*# x 15#))) },
                                      GHC.Types.F#
                                        (GHC.Prim.int2Float#
                                           (GHC.Prim.-#
                                              365#
                                              (GHC.Prim.*# (GHC.Prim.-# ww 20#) 60#))) #) } }
                     } in
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.>=# ww 12#) of wild {
                       GHC.Types.False -> $j1
                       GHC.Types.True
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.<=# ww 21#) of wild1 {
                            GHC.Types.False -> $j1
                            GHC.Types.True
                            -> (# GHC.Types.F#
                                    (GHC.Prim.int2Float#
                                       (GHC.Prim.+# -365# (GHC.Prim.*# (GHC.Prim.-# ww 10#) 60#))),
                                  case w of wild2 { GHC.Types.I# x ->
                                  GHC.Types.F#
                                    (GHC.Prim.int2Float#
                                       (GHC.Prim.-# 360# (GHC.Prim.*# x 15#))) } #) } }
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 1#) of wild {
                   GHC.Types.False -> $j
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<=# ww 11#) of wild1 {
                        GHC.Types.False -> $j
                        GHC.Types.True
                        -> (# case w of wild2 { GHC.Types.I# x ->
                              GHC.Types.F#
                                (GHC.Prim.int2Float# (GHC.Prim.+# -360# (GHC.Prim.*# x 15#))) },
                              GHC.Types.F#
                                (GHC.Prim.int2Float#
                                   (GHC.Prim.+# -350# (GHC.Prim.*# ww 60#))) #) } }) -}
f500613c2d33818a841e7a31f9a31764
  $wgetPriceRent ::
    [SpaceJunk.Player]
    -> GHC.Types.Int
    -> GHC.Base.Maybe GHC.Types.Int
    -> SpaceJunk.Cubes
    -> [SpaceJunk.Street]
    -> GHC.Base.String
    -> (# [SpaceJunk.Player], GHC.Types.Int,
          GHC.Base.Maybe GHC.Types.Int, SpaceJunk.Cubes, [SpaceJunk.Street],
          GHC.Base.String #)
  {- Arity: 6, Strictness: <L,U><L,U(U)><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ (ww :: [SpaceJunk.Player])
                   (ww1 :: GHC.Types.Int)
                   (ww2 :: GHC.Base.Maybe GHC.Types.Int)
                   (ww3 :: SpaceJunk.Cubes)
                   (ww4 :: [SpaceJunk.Street])
                   (ww5 :: GHC.Base.String) ->
                 (# case ww1 of ww6 { GHC.Types.I# ww7 ->
                    case GHC.List.$w!!
                           @ SpaceJunk.Player
                           ww
                           ww7 of wild { SpaceJunk.Player ds ds1 ds2 ds3 ds4 ->
                    case ds3 of wild1 { GHC.Types.I# x ->
                    case GHC.List.$w!!
                           @ SpaceJunk.Street
                           ww4
                           (GHC.Prim.-#
                              x
                              1#) of wild2 { SpaceJunk.Street ds5 ds6 ds7 ds8 ds9 ->
                    case ds9 of wild3 { GHC.Types.I# x1 ->
                    case GHC.List.$w!!
                           @ SpaceJunk.Player
                           ww
                           (GHC.Prim.-#
                              x1
                              1#) of wild4 { SpaceJunk.Player ds10 ds11 ds12 ds13 ds14 ->
                    case ds10 of wild5 { GHC.Types.I# x2 ->
                    let {
                      y :: GHC.Prim.Int# = GHC.Prim.-# x2 1#
                    } in
                    let {
                      n :: GHC.Types.Int
                      = case ds11 of wild6 { GHC.Types.I# x3 ->
                        case ds13 of wild7 { GHC.Types.I# x4 ->
                        case GHC.List.$w!!
                               @ SpaceJunk.Street
                               ww4
                               (GHC.Prim.-#
                                  x4
                                  1#) of wild8 { SpaceJunk.Street ds15 ds16 ds17 ds18 ds19 ->
                        case ds18 of wild9 { GHC.Types.I# x5 ->
                        GHC.Types.I# (GHC.Prim.+# x3 (GHC.Prim.*# x5 -1#)) } } } }
                    } in
                    let {
                      n1 :: SpaceJunk.Player = SpaceJunk.Player wild5 n ds12 ds13 ds14
                    } in
                    let {
                      n2 :: [SpaceJunk.Player]
                      = case GHC.List.$wlenAcc
                               @ SpaceJunk.Player
                               ww
                               0# of ww8 { DEFAULT ->
                        let {
                          y1 :: GHC.Prim.Int# = GHC.Prim.-# ww8 x2
                        } in
                        case GHC.Prim.tagToEnum#
                               @ GHC.Types.Bool
                               (GHC.Prim.<# 0# y1) of wild6 {
                          GHC.Types.False -> SpaceJunk.changePlayerCell21
                          GHC.Types.True
                          -> GHC.List.reverse1
                               @ SpaceJunk.Player
                               (GHC.List.$wunsafeTake
                                  @ SpaceJunk.Player
                                  y1
                                  (GHC.List.reverse1
                                     @ SpaceJunk.Player
                                     ww
                                     (GHC.Types.[] @ SpaceJunk.Player)))
                               (GHC.Types.[] @ SpaceJunk.Player) } }
                    } in
                    let {
                      n3 :: [SpaceJunk.Player] = GHC.Types.: @ SpaceJunk.Player n1 n2
                    } in
                    case GHC.Prim.tagToEnum#
                           @ GHC.Types.Bool
                           (GHC.Prim.<# 0# y) of wild6 {
                      GHC.Types.False -> n3
                      GHC.Types.True
                      -> letrec {
                           $wgo :: [SpaceJunk.Player] -> GHC.Prim.Int# -> [SpaceJunk.Player]
                             {- Arity: 2, Strictness: <S,1*U><L,1*U>, Inline: [0] -}
                           = \ (w :: [SpaceJunk.Player]) (ww8 :: GHC.Prim.Int#) ->
                             case w of wild7 {
                               [] -> n3
                               : y1 ys
                               -> case ww8 of ds15 {
                                    DEFAULT
                                    -> GHC.Types.:
                                         @ SpaceJunk.Player
                                         y1
                                         ($wgo ys (GHC.Prim.-# ds15 1#))
                                    1# -> GHC.Types.: @ SpaceJunk.Player y1 n3 } }
                         } in
                         $wgo ww y } } } } } } } },
                    ww1, ww2, ww3, ww4, ww5 #)) -}
49b7c0fe2f3f024d5477f27e9b283153
  $wgetTypeCell ::
    GHC.Prim.Int# -> SpaceJunk.GameState -> [GHC.Types.Char]
  {- Arity: 2, Strictness: <S,1*U><L,1*U(A,A,A,A,1*U,A)>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#) (w :: SpaceJunk.GameState) ->
                 case ww of wild {
                   DEFAULT
                   -> case w of wild1 { SpaceJunk.GameState ds ds1 ds2 ds3 ds4 ds5 ->
                      case GHC.List.$w!!
                             @ SpaceJunk.Street
                             ds4
                             (GHC.Prim.-#
                                wild
                                1#) of wild2 { SpaceJunk.Street ds6 ds7 ds8 ds9 ds10 ->
                      case ds8 of wild3 {
                        GHC.Types.False -> SpaceJunk.changePlayerCell19
                        GHC.Types.True -> SpaceJunk.changePlayerCell17 } } }
                   1# -> SpaceJunk.changePlayerCell15
                   3# -> SpaceJunk.changePlayerCell13
                   5# -> SpaceJunk.changePlayerCell11
                   8# -> SpaceJunk.changePlayerCell9
                   11# -> SpaceJunk.changePlayerCell7
                   18# -> SpaceJunk.changePlayerCell13
                   21# -> SpaceJunk.changePlayerCell7
                   23# -> SpaceJunk.changePlayerCell9
                   31# -> SpaceJunk.changePlayerCell5
                   34# -> SpaceJunk.changePlayerCell13
                   37# -> SpaceJunk.changePlayerCell9
                   39# -> SpaceJunk.changePlayerCell3 }) -}
af2f1b60b192e418d6a87f2494e6b2f9
  $wisPay ::
    GHC.Prim.Float# -> GHC.Types.Float -> GHC.Base.Maybe GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><L,U(U)>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Float#) (ww1 :: GHC.Types.Float) ->
                 let {
                   $j :: GHC.Base.Maybe GHC.Types.Bool <join 0>
                   = case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.gtFloat# ww 0.0#) of wild {
                       GHC.Types.False -> GHC.Base.Nothing @ GHC.Types.Bool
                       GHC.Types.True
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.ltFloat# ww 100.0#) of wild1 {
                            GHC.Types.False -> GHC.Base.Nothing @ GHC.Types.Bool
                            GHC.Types.True
                            -> case ww1 of wild2 { GHC.Types.F# x ->
                               case GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.gtFloat# x -50.0#) of wild3 {
                                 GHC.Types.False -> GHC.Base.Nothing @ GHC.Types.Bool
                                 GHC.Types.True
                                 -> case GHC.Prim.tagToEnum#
                                           @ GHC.Types.Bool
                                           (GHC.Prim.ltFloat# x 50.0#) of wild4 {
                                      GHC.Types.False -> GHC.Base.Nothing @ GHC.Types.Bool
                                      GHC.Types.True -> SpaceJunk.handleGame2 } } } } }
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.ltFloat# ww 0.0#) of wild {
                   GHC.Types.False -> $j
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.gtFloat# ww -100.0#) of wild1 {
                        GHC.Types.False -> $j
                        GHC.Types.True
                        -> case ww1 of wild2 { GHC.Types.F# x ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.gtFloat# x -50.0#) of wild3 {
                             GHC.Types.False -> $j
                             GHC.Types.True
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.ltFloat# x 50.0#) of wild4 {
                                  GHC.Types.False -> $j
                                  GHC.Types.True -> SpaceJunk.handleGame1 } } } } }) -}
77f6857f7252dfa7ca8204d7071cd6eb
  $wmakeStepFeatures ::
    [SpaceJunk.Player]
    -> GHC.Types.Int
    -> GHC.Base.Maybe GHC.Types.Int
    -> SpaceJunk.Cubes
    -> [SpaceJunk.Street]
    -> GHC.Base.String
    -> (# [SpaceJunk.Player], GHC.Types.Int,
          GHC.Base.Maybe GHC.Types.Int, SpaceJunk.Cubes, [SpaceJunk.Street],
          GHC.Base.String #)
  {- Arity: 6, Strictness: <L,U><L,U(U)><L,U><L,U><L,U><S,U>,
     Inline: [0],
     Unfolding: (\ (ww :: [SpaceJunk.Player])
                   (ww1 :: GHC.Types.Int)
                   (ww2 :: GHC.Base.Maybe GHC.Types.Int)
                   (ww3 :: SpaceJunk.Cubes)
                   (ww4 :: [SpaceJunk.Street])
                   (ww5 :: GHC.Base.String) ->
                 case GHC.Base.eqString ww5 SpaceJunk.changePlayerCell15 of wild {
                   GHC.Types.False
                   -> case GHC.Base.eqString
                             ww5
                             SpaceJunk.changePlayerCell11 of wild1 {
                        GHC.Types.False
                        -> case GHC.Base.eqString
                                  ww5
                                  SpaceJunk.changePlayerCell3 of wild2 {
                             GHC.Types.False
                             -> case GHC.Base.eqString
                                       ww5
                                       SpaceJunk.changePlayerCell7 of wild3 {
                                  GHC.Types.False
                                  -> case GHC.Base.eqString
                                            ww5
                                            SpaceJunk.changePlayerCell17 of wild4 {
                                       GHC.Types.False -> (# ww, ww1, ww2, ww3, ww4, ww5 #)
                                       GHC.Types.True
                                       -> case SpaceJunk.$wpayPrictRent
                                                 ww
                                                 ww1
                                                 ww2
                                                 ww3
                                                 ww4
                                                 ww5 of ww6 { (#,,,,,#) ww7 ww8 ww9 ww10 ww11 ww12 ->
                                          SpaceJunk.$wgetPriceRent ww7 ww8 ww9 ww10 ww11 ww12 } }
                                  GHC.Types.True
                                  -> (# ww,
                                        case ww1 of wild4 { GHC.Types.I# x ->
                                        GHC.Types.I# (GHC.Prim.+# (GHC.Prim.andI# x 3#) 1#) },
                                        ww2, ww3, ww4, ww5 #) }
                             GHC.Types.True
                             -> SpaceJunk.$wpayTax
                                  ww
                                  ww1
                                  ww2
                                  ww3
                                  ww4
                                  ww5
                                  SpaceJunk.makeStepFeatures2 }
                        GHC.Types.True
                        -> SpaceJunk.$wpayTax
                             ww
                             ww1
                             ww2
                             ww3
                             ww4
                             ww5
                             SpaceJunk.makeStepFeatures1 }
                   GHC.Types.True -> (# ww, ww1, ww2, ww3, ww4, ww5 #) }) -}
da6afecf08e78de69c37113e5a972524
  $wpayPrictRent ::
    [SpaceJunk.Player]
    -> GHC.Types.Int
    -> GHC.Base.Maybe GHC.Types.Int
    -> SpaceJunk.Cubes
    -> [SpaceJunk.Street]
    -> GHC.Base.String
    -> (# [SpaceJunk.Player], GHC.Types.Int,
          GHC.Base.Maybe GHC.Types.Int, SpaceJunk.Cubes, [SpaceJunk.Street],
          GHC.Base.String #)
  {- Arity: 6, Strictness: <L,U><L,U(U)><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ (ww :: [SpaceJunk.Player])
                   (ww1 :: GHC.Types.Int)
                   (ww2 :: GHC.Base.Maybe GHC.Types.Int)
                   (ww3 :: SpaceJunk.Cubes)
                   (ww4 :: [SpaceJunk.Street])
                   (ww5 :: GHC.Base.String) ->
                 (# case ww1 of wild { GHC.Types.I# x ->
                    let {
                      y :: GHC.Prim.Int# = GHC.Prim.-# x 1#
                    } in
                    let {
                      n :: SpaceJunk.Player
                      = case GHC.List.$w!!
                               @ SpaceJunk.Player
                               ww
                               y of wild1 { SpaceJunk.Player ds ds1 ds2 ds3 ds4 ->
                        SpaceJunk.Player
                          ds
                          (case ds1 of wild2 { GHC.Types.I# x1 ->
                           case ds3 of wild3 { GHC.Types.I# x2 ->
                           case GHC.List.$w!!
                                  @ SpaceJunk.Street
                                  ww4
                                  (GHC.Prim.-#
                                     x2
                                     1#) of wild4 { SpaceJunk.Street ds5 ds6 ds7 ds8 ds9 ->
                           case ds8 of wild5 { GHC.Types.I# x3 ->
                           GHC.Types.I# (GHC.Prim.+# x1 (GHC.Prim.*# x3 -1#)) } } } })
                          ds2
                          ds3
                          ds4 }
                    } in
                    let {
                      n1 :: [SpaceJunk.Player]
                      = case GHC.List.$wlenAcc
                               @ SpaceJunk.Player
                               ww
                               0# of ww6 { DEFAULT ->
                        let {
                          y1 :: GHC.Prim.Int# = GHC.Prim.-# ww6 x
                        } in
                        case GHC.Prim.tagToEnum#
                               @ GHC.Types.Bool
                               (GHC.Prim.<# 0# y1) of wild1 {
                          GHC.Types.False -> SpaceJunk.changePlayerCell21
                          GHC.Types.True
                          -> GHC.List.reverse1
                               @ SpaceJunk.Player
                               (GHC.List.$wunsafeTake
                                  @ SpaceJunk.Player
                                  y1
                                  (GHC.List.reverse1
                                     @ SpaceJunk.Player
                                     ww
                                     (GHC.Types.[] @ SpaceJunk.Player)))
                               (GHC.Types.[] @ SpaceJunk.Player) } }
                    } in
                    let {
                      n2 :: [SpaceJunk.Player] = GHC.Types.: @ SpaceJunk.Player n n1
                    } in
                    case GHC.Prim.tagToEnum#
                           @ GHC.Types.Bool
                           (GHC.Prim.<# 0# y) of wild1 {
                      GHC.Types.False -> n2
                      GHC.Types.True
                      -> letrec {
                           $wgo :: [SpaceJunk.Player] -> GHC.Prim.Int# -> [SpaceJunk.Player]
                             {- Arity: 2, Strictness: <S,1*U><L,1*U>, Inline: [0] -}
                           = \ (w :: [SpaceJunk.Player]) (ww6 :: GHC.Prim.Int#) ->
                             case w of wild2 {
                               [] -> n2
                               : y1 ys
                               -> case ww6 of ds1 {
                                    DEFAULT
                                    -> GHC.Types.:
                                         @ SpaceJunk.Player
                                         y1
                                         ($wgo ys (GHC.Prim.-# ds1 1#))
                                    1# -> GHC.Types.: @ SpaceJunk.Player y1 n2 } }
                         } in
                         $wgo ww y } },
                    ww1, ww2, ww3, ww4, ww5 #)) -}
47a93b2c492c68ea29982cf48f1c4df1
  $wpayTax ::
    [SpaceJunk.Player]
    -> GHC.Types.Int
    -> GHC.Base.Maybe GHC.Types.Int
    -> SpaceJunk.Cubes
    -> [SpaceJunk.Street]
    -> GHC.Base.String
    -> GHC.Types.Int
    -> (# [SpaceJunk.Player], GHC.Types.Int,
          GHC.Base.Maybe GHC.Types.Int, SpaceJunk.Cubes, [SpaceJunk.Street],
          GHC.Base.String #)
  {- Arity: 7,
     Strictness: <L,U><L,U(U)><L,U><L,U><L,U><L,U><L,1*U(U)>,
     Inline: [0],
     Unfolding: (\ (ww :: [SpaceJunk.Player])
                   (ww1 :: GHC.Types.Int)
                   (ww2 :: GHC.Base.Maybe GHC.Types.Int)
                   (ww3 :: SpaceJunk.Cubes)
                   (ww4 :: [SpaceJunk.Street])
                   (ww5 :: GHC.Base.String)
                   (w :: GHC.Types.Int) ->
                 (# case ww1 of wild { GHC.Types.I# x ->
                    let {
                      y :: GHC.Prim.Int# = GHC.Prim.-# x 1#
                    } in
                    let {
                      n :: SpaceJunk.Player
                      = case GHC.List.$w!!
                               @ SpaceJunk.Player
                               ww
                               y of wild1 { SpaceJunk.Player ds ds1 ds2 ds3 ds4 ->
                        SpaceJunk.Player
                          ds
                          (case ds1 of wild2 { GHC.Types.I# x1 ->
                           case w of wild3 { GHC.Types.I# y1 ->
                           GHC.Types.I# (GHC.Prim.-# x1 y1) } })
                          ds2
                          ds3
                          ds4 }
                    } in
                    let {
                      n1 :: [SpaceJunk.Player]
                      = case GHC.List.$wlenAcc
                               @ SpaceJunk.Player
                               ww
                               0# of ww6 { DEFAULT ->
                        let {
                          y1 :: GHC.Prim.Int# = GHC.Prim.-# ww6 x
                        } in
                        case GHC.Prim.tagToEnum#
                               @ GHC.Types.Bool
                               (GHC.Prim.<# 0# y1) of wild1 {
                          GHC.Types.False -> SpaceJunk.changePlayerCell21
                          GHC.Types.True
                          -> GHC.List.reverse1
                               @ SpaceJunk.Player
                               (GHC.List.$wunsafeTake
                                  @ SpaceJunk.Player
                                  y1
                                  (GHC.List.reverse1
                                     @ SpaceJunk.Player
                                     ww
                                     (GHC.Types.[] @ SpaceJunk.Player)))
                               (GHC.Types.[] @ SpaceJunk.Player) } }
                    } in
                    let {
                      n2 :: [SpaceJunk.Player] = GHC.Types.: @ SpaceJunk.Player n n1
                    } in
                    case GHC.Prim.tagToEnum#
                           @ GHC.Types.Bool
                           (GHC.Prim.<# 0# y) of wild1 {
                      GHC.Types.False -> n2
                      GHC.Types.True
                      -> letrec {
                           $wgo :: [SpaceJunk.Player] -> GHC.Prim.Int# -> [SpaceJunk.Player]
                             {- Arity: 2, Strictness: <S,1*U><L,1*U>, Inline: [0] -}
                           = \ (w1 :: [SpaceJunk.Player]) (ww6 :: GHC.Prim.Int#) ->
                             case w1 of wild2 {
                               [] -> n2
                               : y1 ys
                               -> case ww6 of ds1 {
                                    DEFAULT
                                    -> GHC.Types.:
                                         @ SpaceJunk.Player
                                         y1
                                         ($wgo ys (GHC.Prim.-# ds1 1#))
                                    1# -> GHC.Types.: @ SpaceJunk.Player y1 n2 } }
                         } in
                         $wgo ww y } },
                    case ww1 of wild1 { GHC.Types.I# x ->
                    GHC.Types.I# (GHC.Prim.+# (GHC.Prim.andI# x 3#) 1#) },
                    ww2, ww3, ww4, ww5 #)) -}
d127abae40d0705e0e4d467b1fa98850
  type Cards = [SpaceJunk.ChanceCard]
63ff3c3451c06f0ee2c60246a1c7a5c6
  data ChanceCard
    = ChanceCard {num :: GHC.Types.Int,
                  price2 :: GHC.Types.Int,
                  text2 :: GHC.Base.String}
1d1d9b7a21613a07db2f63f349b29910
  data Cubes
    = Cubes {firstCube :: GHC.Types.Int, secondCube :: GHC.Types.Int}
8b5d96e2da0cc4325a8c4232fed1f2ac
  data GameState
    = GameState {players :: [SpaceJunk.Player],
                 gamePlayer :: GHC.Types.Int,
                 haveWinner :: GHC.Base.Maybe GHC.Types.Int,
                 cubes :: SpaceJunk.Cubes,
                 land :: [SpaceJunk.Street],
                 typeStep :: GHC.Base.String}
459744eed0eee78cd9ffc4db9b28a435
  data Images
    = Images {imagePieceRed :: Graphics.Gloss.Internals.Data.Picture.Picture,
              imagePieceBlue :: Graphics.Gloss.Internals.Data.Picture.Picture,
              imagePieceGreen :: Graphics.Gloss.Internals.Data.Picture.Picture,
              imagePieceYellow :: Graphics.Gloss.Internals.Data.Picture.Picture,
              imagePlayingField :: Graphics.Gloss.Internals.Data.Picture.Picture,
              imagePayMenu :: Graphics.Gloss.Internals.Data.Picture.Picture}
a3ee19505cebef944364f75aea4790ac
  class Physical a where
    getPosition :: a -> Graphics.Gloss.Internals.Data.Picture.Point
    getCell :: a -> GHC.Types.Int
    setPosition :: Graphics.Gloss.Internals.Data.Picture.Point
                   -> a -> a
    setCell :: GHC.Types.Int -> a -> a
    {-# MINIMAL getPosition, getCell, setPosition, setCell #-}
64cc4e0886c11913019d59ff2f01426d
  data Player
    = Player {colour :: GHC.Types.Int,
              money :: GHC.Types.Int,
              property :: [SpaceJunk.Street],
              playerCell :: GHC.Types.Int,
              playerPosition :: Graphics.Gloss.Internals.Data.Picture.Point}
441b1db5f66655dd6c226c112b935bfd
  data Street
    = Street {name :: GHC.Base.String,
              price :: GHC.Types.Int,
              isRent :: GHC.Types.Bool,
              priceRent :: GHC.Types.Int,
              owner :: GHC.Types.Int}
a4dc18ad549d303d7b68aa0e875caa91
  canGo :: SpaceJunk.GameState -> GHC.Base.Maybe SpaceJunk.GameState
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m2,
     Unfolding: InlineRule (0, True, True)
                (GHC.Base.Just @ SpaceJunk.GameState) -}
bc5c3b59cacedd915f83f1004a1c391a
  chanceCard :: SpaceJunk.GameState -> SpaceJunk.GameState
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U,U,U,U)>m,
     Unfolding: InlineRule (1, True, True)
                (\ (gameState :: SpaceJunk.GameState) -> gameState) -}
9eab6d8a18aae6c37763035b5785748c
  changeBalance ::
    SpaceJunk.Player -> GHC.Types.Int -> SpaceJunk.Player
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S,1*U(U,1*U(U),U,U,U)><L,1*U(U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (player :: SpaceJunk.Player) (sum :: GHC.Types.Int) ->
                 case player of wild { SpaceJunk.Player ds ds1 ds2 ds3 ds4 ->
                 SpaceJunk.Player
                   ds
                   (case ds1 of wild1 { GHC.Types.I# x ->
                    case sum of wild2 { GHC.Types.I# y ->
                    GHC.Types.I# (GHC.Prim.+# x y) } })
                   ds2
                   ds3
                   ds4 }) -}
26d7faf0f898bae6132c406c5df0c8ec
  changePlayerCell :: SpaceJunk.GameState -> SpaceJunk.GameState
  {- Arity: 1, Strictness: <S,1*U(U,U(U),U,U(U(U),U(U)),U,A)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: SpaceJunk.GameState) ->
                 case w of ww { SpaceJunk.GameState ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case SpaceJunk.$wchangePlayerCell
                        ww1
                        ww2
                        ww3
                        ww4
                        ww5 of ww7 { (#,,,,,#) ww8 ww9 ww10 ww11 ww12 ww13 ->
                 SpaceJunk.GameState ww8 ww9 ww10 ww11 ww12 ww13 } }) -}
bf6bf120cf6b9c8a176446c178df84f8
  changePlayerCell1 :: GHC.Base.String
  {- Unfolding: (Control.Exception.Base.absentError
                   @ GHC.Base.String
                   SpaceJunk.changePlayerCell2) -}
c8b9939c3a8efa609faefb79f21f0c4b
  changePlayerCell10 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\\209\\136\\208\\176\\208\\189\\209\\129"#) -}
6f4b3cfd4e4bc8d5e3dbbe7fe2c0b33d
  changePlayerCell11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   SpaceJunk.changePlayerCell12) -}
f7ef83ac19b6a16b9b81bb1d860de895
  changePlayerCell12 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\\208\\189\\208\\176\\208\\187\\208\\190\\208\\179"#) -}
f43d0c76add024bba61546c02bf51f27
  changePlayerCell13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   SpaceJunk.changePlayerCell14) -}
cda6e755c69bc38c8de10f98eaaf585c
  changePlayerCell14 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\\208\\186\\208\\176\\208\\183\\208\\189\\208\\176"#) -}
9f59cd7bfc60dfa6e01504f8cee735a8
  changePlayerCell15 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   SpaceJunk.changePlayerCell16) -}
37a88e843761c35de1098ad693610617
  changePlayerCell16 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\\209\\129\\209\\130\\208\\176\\209\\128\\209\\130"#) -}
1d0dc769991e0370fdd0edaf1ca342ba
  changePlayerCell17 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   SpaceJunk.changePlayerCell18) -}
a7376e917f0577148184f1428a7d943a
  changePlayerCell18 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\\208\\186\\208\\176\\209\\132\\208\\181\\208\\180\\209\\128\\208\\176 \\208\\183\\208\\176\\208\\189\\209\\143\\209\\130\\208\\176"#) -}
552a1262e5244e7f821d7743e26bae42
  changePlayerCell19 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   SpaceJunk.changePlayerCell20) -}
6665af8dd085e1efcec25729d4e28dbb
  changePlayerCell2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ww String"#) -}
a7f480688c9f2ec88fe6134421b7caf1
  changePlayerCell20 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\\208\\186\\208\\176\\209\\132\\208\\181\\208\\180\\209\\128\\208\\176 \\209\\129\\208\\178\\208\\190\\208\\177\\208\\190\\208\\180\\208\\189\\208\\176\\209\\143"#) -}
75ee6307abd6ee4e2a7687872d3e6f70
  changePlayerCell21 :: [SpaceJunk.Player]
  {- Unfolding: (GHC.List.reverse1
                   @ SpaceJunk.Player
                   (GHC.Types.[] @ SpaceJunk.Player)
                   (GHC.Types.[] @ SpaceJunk.Player)) -}
a8d8e6be282bb1c26bc9468b40375000
  changePlayerCell3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   SpaceJunk.changePlayerCell4) -}
3659a1ad40eb6d4834b9f5a8dcf29de2
  changePlayerCell4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\\209\\129\\208\\178\\208\\181\\209\\128\\209\\133\\208\\189\\208\\176\\208\\187\\208\\190\\208\\179"#) -}
db8605b33e48e6dcf431311048245b4d
  changePlayerCell5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   SpaceJunk.changePlayerCell6) -}
3d548f04664d59e26b536a4a6748e92b
  changePlayerCell6 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\\209\\130\\209\\142\\209\\128\\209\\140\\208\\188\\208\\176"#) -}
89aa8d8039af67c3802f898df645db5d
  changePlayerCell7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   SpaceJunk.changePlayerCell8) -}
c4683f77fe5271898783a255aa4afcbf
  changePlayerCell8 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\\209\\129\\209\\130\\208\\190\\209\\143\\208\\189\\208\\186\\208\\176"#) -}
b38939873096118c70486d7ed78af835
  changePlayerCell9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   SpaceJunk.changePlayerCell10) -}
64cc4e0886c11913019d59ff2f01426d
  colour :: SpaceJunk.Player -> GHC.Types.Int
  RecSel Left SpaceJunk.Player
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLL),1*U(1*U(U),A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: SpaceJunk.Player) ->
                 case ds of wild { SpaceJunk.Player ds1 ds2 ds3 ds4 ds5 -> ds1 }) -}
8b5d96e2da0cc4325a8c4232fed1f2ac
  cubes :: SpaceJunk.GameState -> SpaceJunk.Cubes
  RecSel Left SpaceJunk.GameState
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLL),1*U(A,A,A,1*U(U,U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: SpaceJunk.GameState) ->
                 case ds of wild { SpaceJunk.GameState ds1 ds2 ds3 ds4 ds5 ds6 ->
                 ds4 }) -}
85e89376476bc521b40c6b0c24660714
  doStep ::
    Graphics.Gloss.Internals.Data.Picture.Point
    -> SpaceJunk.GameState -> SpaceJunk.GameState
  {- Arity: 2, Strictness: <L,A><S(LLSLLL),1*U(U,U(U),U,U,U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (point :: Graphics.Gloss.Internals.Data.Picture.Point)
                   (gameState :: SpaceJunk.GameState) ->
                 case gameState of wild { SpaceJunk.GameState ds ds1 ds2 ds3 ds4 ds5 ->
                 case ds2 of wild1 {
                   GHC.Base.Nothing
                   -> SpaceJunk.makeStepFeatures
                        (SpaceJunk.changePlayerCell
                           (SpaceJunk.GameState
                              ds
                              ds1
                              (GHC.Base.Nothing @ GHC.Types.Int)
                              SpaceJunk.doStep1
                              ds4
                              ds5))
                   GHC.Base.Just ds6 -> wild } }) -}
f66f4f74c9751b2ac188c03b24983923
  doStep1 :: SpaceJunk.Cubes
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (SpaceJunk.Cubes SpaceJunk.doStep3 SpaceJunk.doStep2) -}
889b3ae782c5c2ef6f526940355085ff
  doStep2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 2#) -}
b8613094018bb5f84a09ab53dbed4628
  doStep3 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1#) -}
9a186ab516cd231fb35038a2586bc93b
  drawGameState ::
    SpaceJunk.Images
    -> SpaceJunk.GameState
    -> Graphics.Gloss.Internals.Data.Picture.Picture
  {- Arity: 2,
     Strictness: <L,U(U,U,U,U,U,U)><S(LLLLLS),1*U(U,A,A,A,A,U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: SpaceJunk.Images) (w1 :: SpaceJunk.GameState) ->
                 case w1 of ww { SpaceJunk.GameState ww1 ww2 ww3 ww4 ww5 ww6 ->
                 SpaceJunk.$wdrawGameState w ww1 ww6 }) -}
447210a06ce4bdb906af520a8b6c2ce2
  drawPayMenu ::
    Graphics.Gloss.Internals.Data.Picture.Picture
    -> Graphics.Gloss.Internals.Data.Picture.Picture
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m11,
     Unfolding: InlineRule (1, True, False)
                (\ (image :: Graphics.Gloss.Internals.Data.Picture.Picture) ->
                 Graphics.Gloss.Internals.Data.Picture.Translate
                   SpaceJunk.drawPayMenu1
                   SpaceJunk.drawPayMenu1
                   image) -}
df1404014de31cde41a640ef94d48f39
  drawPayMenu1 :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.F# 0.0#) -}
1586f2d063700df2d0e98db25bd1e79c
  drawPiece ::
    Graphics.Gloss.Internals.Data.Picture.Picture
    -> SpaceJunk.Player
    -> Graphics.Gloss.Internals.Data.Picture.Picture
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U><L,1*U(A,A,A,A,1*U(1*U,1*U))>m11,
     Unfolding: InlineRule (2, True, False)
                (\ (image :: Graphics.Gloss.Internals.Data.Picture.Picture)
                   (player :: SpaceJunk.Player) ->
                 let {
                   ds :: (GHC.Types.Float, GHC.Types.Float)
                   = case player of wild { SpaceJunk.Player ds1 ds2 ds3 ds4 ds5 ->
                     ds5 }
                 } in
                 Graphics.Gloss.Internals.Data.Picture.Translate
                   (case ds of wild { (,) x y -> x })
                   (case ds of wild { (,) x y -> y })
                   (Graphics.Gloss.Internals.Data.Picture.Scale
                      SpaceJunk.drawPiece_r
                      SpaceJunk.drawPiece_r
                      image)) -}
334693a9ff888e1b6510862e93a5f879
  drawPiece_r :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.F# 2.0#) -}
99d7f2cbf98ff97a35e73bc91dcd757c
  drawPlayingField ::
    Graphics.Gloss.Internals.Data.Picture.Picture
    -> Graphics.Gloss.Internals.Data.Picture.Picture
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m11,
     Unfolding: InlineRule (1, True, False)
                (\ (image :: Graphics.Gloss.Internals.Data.Picture.Picture) ->
                 Graphics.Gloss.Internals.Data.Picture.Translate
                   SpaceJunk.drawPayMenu1
                   SpaceJunk.drawPayMenu1
                   image) -}
1d1d9b7a21613a07db2f63f349b29910
  firstCube :: SpaceJunk.Cubes -> GHC.Types.Int
  RecSel Left SpaceJunk.Cubes
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(1*U(U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: SpaceJunk.Cubes) ->
                 case ds of wild { SpaceJunk.Cubes ds1 ds2 -> ds1 }) -}
8b5d96e2da0cc4325a8c4232fed1f2ac
  gamePlayer :: SpaceJunk.GameState -> GHC.Types.Int
  RecSel Left SpaceJunk.GameState
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLL),1*U(A,1*U(U),A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: SpaceJunk.GameState) ->
                 case ds of wild { SpaceJunk.GameState ds1 ds2 ds3 ds4 ds5 ds6 ->
                 ds2 }) -}
e5f976ad4f5f350b997c462a7df0697d
  getPlayerPosition ::
    GHC.Types.Int
    -> GHC.Types.Int -> Graphics.Gloss.Internals.Data.Picture.Point
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U(U)><S(S),1*U(U)>m,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: GHC.Types.Int) ->
                 case w1 of ww { GHC.Types.I# ww1 ->
                 case SpaceJunk.$wgetPlayerPosition w ww1 of ww2 { (#,#) ww3 ww4 ->
                 (ww3, ww4) } }) -}
7597134db3365d6fb1c30d099851cbaa
  getPriceRent :: SpaceJunk.GameState -> SpaceJunk.GameState
  {- Arity: 1, Strictness: <S,1*U(U,U(U),U,U,U,U)>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: SpaceJunk.GameState) ->
                 case w of ww { SpaceJunk.GameState ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case SpaceJunk.$wgetPriceRent
                        ww1
                        ww2
                        ww3
                        ww4
                        ww5
                        ww6 of ww7 { (#,,,,,#) ww8 ww9 ww10 ww11 ww12 ww13 ->
                 SpaceJunk.GameState ww8 ww9 ww10 ww11 ww12 ww13 } }) -}
1cddb8f7875b70171feef636994c3abf
  getTypeCell ::
    GHC.Types.Int -> SpaceJunk.GameState -> GHC.Base.String
  {- Arity: 2, Strictness: <S(S),1*U(1*U)><L,1*U(A,A,A,A,1*U,A)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: SpaceJunk.GameState) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 SpaceJunk.$wgetTypeCell ww1 w1 }) -}
ba39f8c1bd844136a0f99fcf1da83396
  handleGame ::
    Graphics.Gloss.Internals.Interface.Event.Event
    -> SpaceJunk.GameState -> SpaceJunk.GameState
  {- Arity: 2, Strictness: <S,1*U><S,1*U(U,U(U),U,U,U,U)>m,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Graphics.Gloss.Internals.Interface.Event.Event)
                   (w1 :: SpaceJunk.GameState) ->
                 case w1 of ww { SpaceJunk.GameState ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w of wild {
                   DEFAULT -> SpaceJunk.GameState ww1 ww2 ww3 ww4 ww5 ww6
                   Graphics.Gloss.Internals.Interface.Event.EventKey ds ds1 ds2 mouse
                   -> case ds of wild1 {
                        DEFAULT -> SpaceJunk.GameState ww1 ww2 ww3 ww4 ww5 ww6
                        Graphics.Gloss.Internals.Interface.Backend.Types.MouseButton ds3
                        -> case ds3 of wild2 {
                             DEFAULT -> SpaceJunk.GameState ww1 ww2 ww3 ww4 ww5 ww6
                             Graphics.Gloss.Internals.Interface.Backend.Types.LeftButton
                             -> case ds1 of wild3 {
                                  Graphics.Gloss.Internals.Interface.Backend.Types.Down
                                  -> case GHC.Base.eqString ww6 SpaceJunk.handleGame3 of wild4 {
                                       GHC.Types.False
                                       -> case GHC.Base.eqString
                                                 ww6
                                                 SpaceJunk.changePlayerCell19 of wild5 {
                                            GHC.Types.False
                                            -> SpaceJunk.GameState ww1 ww2 ww3 ww4 ww5 ww6
                                            GHC.Types.True
                                            -> case mouse of ww7 { (,) ww8 ww9 ->
                                               case ww8 of ww10 { GHC.Types.F# ww11 ->
                                               case SpaceJunk.$wisPay ww11 ww9 of wild6 {
                                                 GHC.Base.Nothing
                                                 -> SpaceJunk.GameState ww1 ww2 ww3 ww4 ww5 ww6
                                                 GHC.Base.Just ds4
                                                 -> case ds4 of wild7 {
                                                      GHC.Types.False
                                                      -> SpaceJunk.GameState
                                                           ww1
                                                           (case ww2 of wild8 { GHC.Types.I# x ->
                                                            GHC.Types.I#
                                                              (GHC.Prim.+#
                                                                 (GHC.Prim.andI# x 3#)
                                                                 1#) })
                                                           ww3
                                                           ww4
                                                           ww5
                                                           SpaceJunk.handleGame3
                                                      GHC.Types.True
                                                      -> SpaceJunk.GameState
                                                           ww1
                                                           (case ww2 of wild8 { GHC.Types.I# x ->
                                                            GHC.Types.I#
                                                              (GHC.Prim.+#
                                                                 (GHC.Prim.andI# x 3#)
                                                                 1#) })
                                                           ww3
                                                           ww4
                                                           ww5
                                                           SpaceJunk.handleGame3 } } } } }
                                       GHC.Types.True
                                       -> case ww3 of wild5 {
                                            GHC.Base.Nothing
                                            -> case SpaceJunk.$wchangePlayerCell
                                                      ww1
                                                      ww2
                                                      (GHC.Base.Nothing @ GHC.Types.Int)
                                                      SpaceJunk.doStep1
                                                      ww5 of ww7 { (#,,,,,#) ww8 ww9 ww10 ww11 ww12 ww13 ->
                                               case SpaceJunk.$wmakeStepFeatures
                                                      ww8
                                                      ww9
                                                      ww10
                                                      ww11
                                                      ww12
                                                      ww13 of ww14 { (#,,,,,#) ww15 ww16 ww17 ww18 ww19 ww20 ->
                                               SpaceJunk.GameState ww15 ww16 ww17 ww18 ww19 ww20 } }
                                            GHC.Base.Just ds4
                                            -> SpaceJunk.GameState ww1 ww2 wild5 ww4 ww5 ww6 } }
                                  Graphics.Gloss.Internals.Interface.Backend.Types.Up
                                  -> SpaceJunk.GameState ww1 ww2 ww3 ww4 ww5 ww6 } } } } }) -}
1ef7023fc23ce10f92f63427ad6a232e
  handleGame1 :: GHC.Base.Maybe GHC.Types.Bool
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just @ GHC.Types.Bool GHC.Types.True) -}
1440519ce5905e1e789314330dcb4215
  handleGame2 :: GHC.Base.Maybe GHC.Types.Bool
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just @ GHC.Types.Bool GHC.Types.False) -}
9b5f7d0e1ae96c0f60224c2a4ca0a217
  handleGame3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   SpaceJunk.handleGame4) -}
fc026b18bf3d32785f2c9cb0935679a1
  handleGame4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("\\209\\133\\208\\190\\208\\180"#) -}
c1c937ef337ceb9c983c84f984a3d60f
  handlePay ::
    Graphics.Gloss.Internals.Interface.Event.Event
    -> SpaceJunk.GameState -> SpaceJunk.GameState
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S,1*U><S,1*U(U,U,U,U,U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: Graphics.Gloss.Internals.Interface.Event.Event)
                   (eta :: SpaceJunk.GameState) ->
                 case ds of wild {
                   DEFAULT -> eta
                   Graphics.Gloss.Internals.Interface.Event.EventKey ds1 ds2 ds3 mouse
                   -> case ds1 of wild1 {
                        DEFAULT -> eta
                        Graphics.Gloss.Internals.Interface.Backend.Types.MouseButton ds4
                        -> case ds4 of wild2 {
                             DEFAULT -> eta
                             Graphics.Gloss.Internals.Interface.Backend.Types.LeftButton
                             -> case ds2 of wild3 { DEFAULT -> eta } } } }) -}
8b5d96e2da0cc4325a8c4232fed1f2ac
  haveWinner :: SpaceJunk.GameState -> GHC.Base.Maybe GHC.Types.Int
  RecSel Left SpaceJunk.GameState
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLL),1*U(A,A,1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: SpaceJunk.GameState) ->
                 case ds of wild { SpaceJunk.GameState ds1 ds2 ds3 ds4 ds5 ds6 ->
                 ds3 }) -}
459744eed0eee78cd9ffc4db9b28a435
  imagePayMenu ::
    SpaceJunk.Images -> Graphics.Gloss.Internals.Data.Picture.Picture
  RecSel Left SpaceJunk.Images
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLS),1*U(A,A,A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: SpaceJunk.Images) ->
                 case ds of wild { SpaceJunk.Images ds1 ds2 ds3 ds4 ds5 ds6 ->
                 ds6 }) -}
459744eed0eee78cd9ffc4db9b28a435
  imagePieceBlue ::
    SpaceJunk.Images -> Graphics.Gloss.Internals.Data.Picture.Picture
  RecSel Left SpaceJunk.Images
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLL),1*U(A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: SpaceJunk.Images) ->
                 case ds of wild { SpaceJunk.Images ds1 ds2 ds3 ds4 ds5 ds6 ->
                 ds2 }) -}
459744eed0eee78cd9ffc4db9b28a435
  imagePieceGreen ::
    SpaceJunk.Images -> Graphics.Gloss.Internals.Data.Picture.Picture
  RecSel Left SpaceJunk.Images
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLL),1*U(A,A,1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: SpaceJunk.Images) ->
                 case ds of wild { SpaceJunk.Images ds1 ds2 ds3 ds4 ds5 ds6 ->
                 ds3 }) -}
459744eed0eee78cd9ffc4db9b28a435
  imagePieceRed ::
    SpaceJunk.Images -> Graphics.Gloss.Internals.Data.Picture.Picture
  RecSel Left SpaceJunk.Images
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLL),1*U(1*U,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: SpaceJunk.Images) ->
                 case ds of wild { SpaceJunk.Images ds1 ds2 ds3 ds4 ds5 ds6 ->
                 ds1 }) -}
459744eed0eee78cd9ffc4db9b28a435
  imagePieceYellow ::
    SpaceJunk.Images -> Graphics.Gloss.Internals.Data.Picture.Picture
  RecSel Left SpaceJunk.Images
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLL),1*U(A,A,A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: SpaceJunk.Images) ->
                 case ds of wild { SpaceJunk.Images ds1 ds2 ds3 ds4 ds5 ds6 ->
                 ds4 }) -}
459744eed0eee78cd9ffc4db9b28a435
  imagePlayingField ::
    SpaceJunk.Images -> Graphics.Gloss.Internals.Data.Picture.Picture
  RecSel Left SpaceJunk.Images
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSL),1*U(A,A,A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: SpaceJunk.Images) ->
                 case ds of wild { SpaceJunk.Images ds1 ds2 ds3 ds4 ds5 ds6 ->
                 ds5 }) -}
958f2f7a000b3bee2b9696de85f762af
  initCards :: SpaceJunk.Cards -> SpaceJunk.Cards
  {- Arity: 1, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, True)
                (\ (cards :: SpaceJunk.Cards) -> SpaceJunk.initCards1) -}
f799f6b5b5782e3fc4c020c335062be3
  initCards1 :: [SpaceJunk.ChanceCard]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ SpaceJunk.ChanceCard
                   SpaceJunk.initCards23
                   SpaceJunk.initCards2) -}
c844e40f50dc4c2cbfc1559e1c71cf75
  initCards10 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 4#) -}
c5cca5331d40c52abc115a88e07ab382
  initCards11 :: SpaceJunk.ChanceCard
  {- Strictness: m,
     Unfolding: (SpaceJunk.ChanceCard
                   SpaceJunk.initCards15
                   SpaceJunk.initCards14
                   SpaceJunk.initCards12) -}
3a50b907f66fc545ddb8e06051c04fe1
  initCards12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   SpaceJunk.initCards13) -}
260a1d2d4f79ac165b93e20bd6cbda22
  initCards13 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\\208\\168\\209\\130\\209\\128\\208\\176\\209\\132 200 \\208\\177\\208\\176\\208\\187\\208\\187\\208\\190\\208\\178!"#) -}
6ed3f2d7d9ea44947c3cca41a375dffe
  initCards14 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# -200#) -}
805dc85c4a1463d4d7dcb25da4ecec05
  initCards15 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 3#) -}
a2f6076dfb748e878840a289c877a6d4
  initCards16 :: SpaceJunk.ChanceCard
  {- Strictness: m,
     Unfolding: (SpaceJunk.ChanceCard
                   SpaceJunk.doStep2
                   SpaceJunk.makeStepFeatures1
                   SpaceJunk.initCards17) -}
b82796d945aaaf082e73478d86531e5e
  initCards17 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   SpaceJunk.initCards18) -}
0e70b2541bb94d10f3148539d495f236
  initCards18 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\\208\\161 \\208\\180\\208\\189\\208\\181\\208\\188 \\209\\128\\208\\190\\208\\182\\208\\180\\208\\181\\208\\189\\208\\184\\209\\143! \\208\\146\\208\\176\\208\\188 \\208\\191\\208\\190\\208\\180\\208\\176\\209\\128\\208\\190\\208\\186 200 \\208\\177\\208\\176\\208\\187\\208\\187\\208\\190\\208\\178"#) -}
951ce76fb9dbd5174492c40de7cf61c8
  initCards19 :: SpaceJunk.ChanceCard
  {- Strictness: m,
     Unfolding: (SpaceJunk.ChanceCard
                   SpaceJunk.doStep3
                   SpaceJunk.initCards22
                   SpaceJunk.initCards20) -}
be680261602087a1ad8fdf56ab59b28a
  initCards2 :: [SpaceJunk.ChanceCard]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ SpaceJunk.ChanceCard
                   SpaceJunk.initCards19
                   SpaceJunk.initCards3) -}
421f0d94d37fe21d3c23258a0e19b7c0
  initCards20 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   SpaceJunk.initCards21) -}
1125f3d52580c1dcfd4ce167cd96e598
  initCards21 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\\208\\168\\209\\130\\209\\128\\208\\176\\209\\132 100 \\208\\177\\208\\176\\208\\187\\208\\187\\208\\190\\208\\178!"#) -}
68a292890a7547573e1bbf363741c9fa
  initCards22 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# -100#) -}
15a68ac0669aecd871e3115f0a310213
  initCards23 :: SpaceJunk.ChanceCard
  {- Strictness: m,
     Unfolding: (SpaceJunk.ChanceCard
                   SpaceJunk.initCards9
                   SpaceJunk.makeStepFeatures2
                   SpaceJunk.initCards24) -}
c234503e09fbc7c751be368e619a6013
  initCards24 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   SpaceJunk.initCards25) -}
cc465d043bf088e6e63fb465e357b7da
  initCards25 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\\208\\146\\208\\176\\208\\188 \\208\\191\\208\\190\\208\\180\\208\\176\\209\\128\\208\\190\\208\\186 100 \\208\\177\\208\\176\\208\\187\\208\\187\\208\\190\\208\\178!"#) -}
3fdacf0f7d6b20556ec92c50b2fe93ed
  initCards3 :: [SpaceJunk.ChanceCard]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ SpaceJunk.ChanceCard
                   SpaceJunk.initCards16
                   SpaceJunk.initCards4) -}
c78636dccef4194e0c794694b8e1953c
  initCards4 :: [SpaceJunk.ChanceCard]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ SpaceJunk.ChanceCard
                   SpaceJunk.initCards11
                   SpaceJunk.initCards5) -}
fa26f1997d03810763a444228c4cedfd
  initCards5 :: [SpaceJunk.ChanceCard]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ SpaceJunk.ChanceCard
                   SpaceJunk.initCards6
                   (GHC.Types.[] @ SpaceJunk.ChanceCard)) -}
99bd17d7a88a5d77426b8481a400caa3
  initCards6 :: SpaceJunk.ChanceCard
  {- Strictness: m,
     Unfolding: (SpaceJunk.ChanceCard
                   SpaceJunk.initCards10
                   SpaceJunk.initCards9
                   SpaceJunk.initCards7) -}
d811f33bed99a11f783c08a2edc898f3
  initCards7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   SpaceJunk.initCards8) -}
c434d245c56f7e143df041df3254a530
  initCards8 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\\208\\150\\208\\184\\208\\178\\208\\184\\209\\130\\208\\181 \\209\\129\\208\\191\\208\\190\\208\\186\\208\\190\\208\\185\\208\\189\\208\\190!"#) -}
ae7284e986ee98b284594ae90b113ed6
  initCards9 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
6ccd8563bfd87bfe1ac283a223c6a9f7
  initGame :: SpaceJunk.GameState
  {- Strictness: m,
     Unfolding: (SpaceJunk.GameState
                   SpaceJunk.initGame213
                   SpaceJunk.doStep3
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   SpaceJunk.initGame212
                   SpaceJunk.initGame1
                   SpaceJunk.handleGame3) -}
4e49ddace8c4b35d7e0e6ee9408b68c0
  initGame1 :: [SpaceJunk.Street]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ SpaceJunk.Street
                   SpaceJunk.initGame205
                   SpaceJunk.initGame2) -}
7a0b32a68433a9d3cabf57e374223eec
  initGame10 :: [SpaceJunk.Street]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ SpaceJunk.Street
                   SpaceJunk.initGame171
                   SpaceJunk.initGame11) -}
0382e81f1ecd7d0531fe70cfbca27a91
  initGame100 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   SpaceJunk.initGame101) -}
bfc171715f92f71ad8bc08f7084a4ab2
  initGame101 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\\208\\144\\208\\161\\208\\146\\208\\154 \\208\\155\\208\\146\\208\\154"#) -}
7cc70a132e3461c198f5d9a7f9130085
  initGame102 :: SpaceJunk.Street
  {- Strictness: m,
     Unfolding: (SpaceJunk.Street
                   SpaceJunk.initGame103
                   SpaceJunk.initGame99
                   GHC.Types.False
                   SpaceJunk.initCards9
                   SpaceJunk.initCards9) -}
3b8cf51f094098d6d53f1debe805e728
  initGame103 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   SpaceJunk.initGame104) -}
f0bdf012f79869e2525972e3978a3837
  initGame104 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\\208\\144\\208\\161\\208\\146\\208\\154 \\208\\155\\208\\145\\208\\152\\208\\161"#) -}
f2da7960fc6cb3163c64562d19fab40a
  initGame105 :: SpaceJunk.Street
  {- Strictness: m,
     Unfolding: (SpaceJunk.Street
                   SpaceJunk.initGame106
                   SpaceJunk.makeStepFeatures1
                   GHC.Types.False
                   SpaceJunk.initCards9
                   SpaceJunk.initCards9) -}
73797d04256887ce1e46e96af1dd8a0a
  initGame106 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   SpaceJunk.initGame107) -}
ed78e67338ba565d602764e208387118
  initGame107 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\\208\\156\\208\\176\\209\\136\\208\\183\\208\\176\\208\\187 3"#) -}
8405ea865fbc1713c18b0b4d1f9ee404
  initGame108 :: SpaceJunk.Street
  {- Strictness: m,
     Unfolding: (SpaceJunk.Street
                   SpaceJunk.initGame110
                   SpaceJunk.initGame109
                   GHC.Types.False
                   SpaceJunk.initCards9
                   SpaceJunk.initCards9) -}
0c9ad4ce44040c833c584d4d6db24ab2
  initGame109 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 240#) -}
a5538dbf17cdab936cef5dda587c1d58
  initGame11 :: [SpaceJunk.Street]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ SpaceJunk.Street
                   SpaceJunk.initGame164
                   SpaceJunk.initGame12) -}
af65272a0e517810fa665a48c0c51f36
  initGame110 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   SpaceJunk.initGame111) -}
fd5c27841cf44b6d9670a0ba9ccf3188
  initGame111 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\\208\\156\\208\\144\\208\\162\\208\\161\\208\\162\\208\\144\\208\\162 \\208\\156\\208\\158\\208\\162\\208\\146\\208\\171"#) -}
e59c4abc50f483a5ed7c9cdba0617454
  initGame112 :: SpaceJunk.Street
  {- Strictness: m,
     Unfolding: (SpaceJunk.Street
                   SpaceJunk.initGame114
                   SpaceJunk.initGame113
                   GHC.Types.False
                   SpaceJunk.initCards9
                   SpaceJunk.initCards9) -}
0da8a81a35ae60ba1aa48c463e139ab8
  initGame113 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 220#) -}
ea3cfc20d8fea28995c7a7f0a0d0977c
  initGame114 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   SpaceJunk.initGame115) -}
a63dced29c983fa45cf4094f5d590b81
  initGame115 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\\208\\156\\208\\144\\208\\162\\208\\161\\208\\162\\208\\144\\208\\162 \\208\\148\\208\\147\\208\\156\\208\\161"#) -}
36f05e438e2b15a703d7a9a21a7b2233
  initGame116 :: SpaceJunk.Street
  {- Strictness: m,
     Unfolding: (SpaceJunk.Street
                   SpaceJunk.initGame60
                   SpaceJunk.initGame120
                   SpaceJunk.initGame119
                   SpaceJunk.initGame118
                   SpaceJunk.initGame117) -}
3b33e51431dfe40c4c6b06ae1f68d5a3
  initGame117 :: GHC.Types.Int
  {- Strictness: x -}
1bf87da494a471b13cb46a14a3780ec6
  initGame118 :: GHC.Types.Int
  {- Strictness: x -}
18a43697db358fdf5ab8d606e433a7ed
  initGame119 :: GHC.Types.Bool
  {- Strictness: x -}
47325bfc01411055204c8865c2fe4635
  initGame12 :: [SpaceJunk.Street]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ SpaceJunk.Street
                   SpaceJunk.initGame161
                   SpaceJunk.initGame13) -}
cb9077716bef550deb520b36d9d017e6
  initGame120 :: GHC.Types.Int
  {- Strictness: x -}
e47aac0f0d2a7b27951e21153637d525
  initGame121 :: SpaceJunk.Street
  {- Strictness: m,
     Unfolding: (SpaceJunk.Street
                   SpaceJunk.initGame122
                   SpaceJunk.initGame113
                   GHC.Types.False
                   SpaceJunk.initCards9
                   SpaceJunk.initCards9) -}
ca212fdcc6bf3eed358888b962e7e7f9
  initGame122 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   SpaceJunk.initGame123) -}
839f213c02af8cb8050b01f503f9ce35
  initGame123 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\\208\\156\\208\\144\\208\\162\\208\\161\\208\\162\\208\\144\\208\\162 \\208\\162\\208\\181\\208\\190\\209\\128\\208\\184\\209\\143 \\209\\128\\208\\184\\209\\129\\208\\186\\208\\190\\208\\178"#) -}
88cbbbda828707307e379f22a19591e4
  initGame124 :: SpaceJunk.Street
  {- Strictness: m,
     Unfolding: (SpaceJunk.Street
                   SpaceJunk.initGame129
                   SpaceJunk.initGame128
                   SpaceJunk.initGame127
                   SpaceJunk.initGame126
                   SpaceJunk.initGame125) -}
f0f8c2107d5aabb39e830d390e0f4ece
  initGame125 :: GHC.Types.Int
  {- Strictness: x -}
cb23b77c904a49fa7f3fa58851a2257f
  initGame126 :: GHC.Types.Int
  {- Strictness: x -}
f132681e5dfec84622eb2179ca7a5a11
  initGame127 :: GHC.Types.Bool
  {- Strictness: x -}
181f4313436251e38e25de2f8a762762
  initGame128 :: GHC.Types.Int
  {- Strictness: x -}
d99637f77842be0c763a870f35a71a40
  initGame129 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   SpaceJunk.initGame130) -}
14ca2867ade9cce150c37c41e5dfd209
  initGame13 :: [SpaceJunk.Street]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ SpaceJunk.Street
                   SpaceJunk.initGame158
                   SpaceJunk.initGame14) -}
e8546e63feebdda8efc1a1fec179d8f0
  initGame130 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\\208\\145\\208\\181\\209\\129\\208\\191\\208\\187\\208\\176\\209\\130\\208\\189\\208\\176\\209\\143 \\208\\186\\209\\131\\209\\128\\208\\184\\208\\187\\208\\186\\208\\176"#) -}
e54b2801e0651bfa25744ca909d7e3ae
  initGame131 :: SpaceJunk.Street
  {- Strictness: m,
     Unfolding: (SpaceJunk.Street
                   SpaceJunk.initGame132
                   SpaceJunk.makeStepFeatures1
                   GHC.Types.False
                   SpaceJunk.initCards9
                   SpaceJunk.initCards9) -}
ca4585da1af85797241fb1338d0548e9
  initGame132 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   SpaceJunk.initGame133) -}
6ba5a66723a10c204732a3eae87ae7b8
  initGame133 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\\208\\152\\208\\158 \\208\\148\\208\\181\\208\\189\\208\\184\\209\\129\\208\\190\\208\\178"#) -}
77852b428032b47a2189f380e3ea6063
  initGame134 :: SpaceJunk.Street
  {- Strictness: m,
     Unfolding: (SpaceJunk.Street
                   SpaceJunk.initGame136
                   SpaceJunk.initGame135
                   GHC.Types.False
                   SpaceJunk.initCards9
                   SpaceJunk.initCards9) -}
cbb0b11418d7200f0d1975af267e30d9
  initGame135 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 180#) -}
286c6fe743a328822f38a265a56926e6
  initGame136 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   SpaceJunk.initGame137) -}
55ea5eab0ce960110023aed7331f54fd
  initGame137 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\\208\\152\\208\\158 \\208\\157\\208\\190\\208\\178\\208\\184\\208\\186\\208\\190\\208\\178\\208\\176"#) -}
47d9cce7693dff29e30211e4c32f060c
  initGame138 :: SpaceJunk.Street
  {- Strictness: m,
     Unfolding: (SpaceJunk.Street
                   SpaceJunk.initGame142
                   SpaceJunk.initGame141
                   GHC.Types.False
                   SpaceJunk.initGame140
                   SpaceJunk.initGame139) -}
dbef8c420eb6b5f513fe49a25e1dcfa8
  initGame139 :: GHC.Types.Int
  {- Strictness: x -}
858e6584b50bd23af291cd9686e4f37e
  initGame14 :: [SpaceJunk.Street]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ SpaceJunk.Street
                   SpaceJunk.initGame154
                   SpaceJunk.initGame15) -}
f63c064314c2926e30582088d96f707b
  initGame140 :: GHC.Types.Int
  {- Strictness: x -}
f8083ea0bbcd6ccdbf43b1069515dc49
  initGame141 :: GHC.Types.Int
  {- Strictness: x -}
5ee397ffb356c89fc804efbda0eab62e
  initGame142 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   SpaceJunk.initGame143) -}
fb2a5967422c0f67c8865d8cf2bfe928
  initGame143 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\\208\\158\\208\\177\\209\\137\\208\\181\\209\\129\\209\\130\\208\\178\\208\\181\\208\\189\\208\\189\\208\\176\\209\\143 \\208\\186\\208\\176\\208\\183\\208\\189\\208\\176"#) -}
e8491812a1be6a6790913474b08d97ef
  initGame144 :: SpaceJunk.Street
  {- Strictness: m,
     Unfolding: (SpaceJunk.Street
                   SpaceJunk.initGame145
                   SpaceJunk.initGame135
                   GHC.Types.False
                   SpaceJunk.initCards9
                   SpaceJunk.initCards9) -}
f2e8500e35867516d7c625e23b9cc209
  initGame145 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   SpaceJunk.initGame146) -}
9f0d7b9764b7cb767fd138dee9aae1f7
  initGame146 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\\208\\152\\208\\158 \\208\\156\\208\\190\\209\\128\\208\\190\\208\\183\\208\\190\\208\\178"#) -}
52de9d2908fe8bc475c09a06ac8956ab
  initGame147 :: SpaceJunk.Street
  {- Strictness: m,
     Unfolding: (SpaceJunk.Street
                   SpaceJunk.initGame148
                   SpaceJunk.makeStepFeatures1
                   GHC.Types.False
                   SpaceJunk.initCards9
                   SpaceJunk.initCards9) -}
3bd1323e399739fc516b7ad60124dbc5
  initGame148 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   SpaceJunk.initGame149) -}
b04a1725a5bfb2bf8f3d61e5bdfe00fb
  initGame149 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\\208\\156\\208\\176\\209\\136\\208\\183\\208\\176\\208\\187 2"#) -}
49959a54df14d50d860bc0353210f869
  initGame15 :: [SpaceJunk.Street]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ SpaceJunk.Street
                   SpaceJunk.initGame150
                   SpaceJunk.initGame16) -}
b44f7de9c17ec308b91ad9c2eb188cae
  initGame150 :: SpaceJunk.Street
  {- Strictness: m,
     Unfolding: (SpaceJunk.Street
                   SpaceJunk.initGame152
                   SpaceJunk.initGame151
                   GHC.Types.False
                   SpaceJunk.initCards9
                   SpaceJunk.initCards9) -}
28c3536ff1b5e89a9d22002fd7835030
  initGame151 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 160#) -}
e7c010c48bce0d0356af1ad040d7316c
  initGame152 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   SpaceJunk.initGame153) -}
6447991b804f997d8452f1dec54d6aef
  initGame153 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\\208\\156\\208\\176\\209\\130\\208\\186\\208\\184\\208\\177 \\208\\148\\208\\184\\209\\129\\208\\186\\209\\128\\208\\181\\209\\130\\208\\189\\209\\139\\208\\185 \\208\\176\\208\\189\\208\\176\\208\\187\\208\\184\\208\\183"#) -}
0229c833aceba2f9f90d2342447a03cd
  initGame154 :: SpaceJunk.Street
  {- Strictness: m,
     Unfolding: (SpaceJunk.Street
                   SpaceJunk.initGame156
                   SpaceJunk.initGame155
                   GHC.Types.False
                   SpaceJunk.initCards9
                   SpaceJunk.initCards9) -}
60b604298ce44fec9d0e90ad1c3f8cdb
  initGame155 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 140#) -}
847ecc1285025510d09ccd85f6c872f6
  initGame156 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   SpaceJunk.initGame157) -}
d43f7e6108d2d16018ab68658a6c3a7c
  initGame157 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\\208\\156\\208\\176\\209\\130\\208\\154\\208\\184\\208\\177 \\208\\148\\208\\164\\208\\161\\208\\144"#) -}
286965f096e1443adf0e11970a5897d5
  initGame158 :: SpaceJunk.Street
  {- Strictness: m,
     Unfolding: (SpaceJunk.Street
                   SpaceJunk.initGame159
                   SpaceJunk.initGame95
                   GHC.Types.False
                   SpaceJunk.initCards9
                   SpaceJunk.initCards9) -}
2d376cd8846f406bb956dc7265e6b3e1
  initGame159 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   SpaceJunk.initGame160) -}
5b2e607e82e1e0317795547b0c5ffe39
  initGame16 :: [SpaceJunk.Street]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ SpaceJunk.Street
                   SpaceJunk.initGame147
                   SpaceJunk.initGame17) -}
5e5fe434760638fe9a6baee5f4553979
  initGame160 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\\208\\159\\208\\190\\209\\130\\208\\181\\209\\128\\209\\143\\209\\136\\208\\186\\208\\184"#) -}
d032664654e4ba00e6f449ad41139d8f
  initGame161 :: SpaceJunk.Street
  {- Strictness: m,
     Unfolding: (SpaceJunk.Street
                   SpaceJunk.initGame162
                   SpaceJunk.initGame155
                   GHC.Types.False
                   SpaceJunk.initCards9
                   SpaceJunk.initCards9) -}
1700167e5a3583aff5d8e30970f2ddb4
  initGame162 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   SpaceJunk.initGame163) -}
a7500331295712cc67f64c02e93388f3
  initGame163 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\\208\\156\\208\\176\\209\\130\\208\\154\\208\\184\\208\\177 \\208\\148\\208\\156\\208\\156\\208\\154"#) -}
c34db1ca1a92d0a5953035663c64f4a3
  initGame164 :: SpaceJunk.Street
  {- Strictness: m,
     Unfolding: (SpaceJunk.Street
                   SpaceJunk.initGame169
                   SpaceJunk.initGame168
                   SpaceJunk.initGame167
                   SpaceJunk.initGame166
                   SpaceJunk.initGame165) -}
d0f475bcff98771421854c4b27d550f8
  initGame165 :: GHC.Types.Int
  {- Strictness: x -}
132775b618fcda37883529d828e9196e
  initGame166 :: GHC.Types.Int
  {- Strictness: x -}
b61c80a9a2305b21fe399f935abaf4c0
  initGame167 :: GHC.Types.Bool
  {- Strictness: x -}
8beaf50d0f8caf2cc97efcb7f9ebcb3c
  initGame168 :: GHC.Types.Int
  {- Strictness: x -}
25436faf6fb325a9ee8856ad617596e6
  initGame169 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   SpaceJunk.initGame170) -}
98a689c3d6b5b23f0a5c9812caf30e71
  initGame17 :: [SpaceJunk.Street]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ SpaceJunk.Street
                   SpaceJunk.initGame144
                   SpaceJunk.initGame18) -}
0687c729764148b62cf7fbefa85bf65a
  initGame170 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\\208\\144\\208\\186\\208\\176\\208\\180\\208\\181\\208\\188"#) -}
81fc0cd3f8b6ed854541c65ad4b38812
  initGame171 :: SpaceJunk.Street
  {- Strictness: m,
     Unfolding: (SpaceJunk.Street
                   SpaceJunk.initGame173
                   SpaceJunk.initGame172
                   GHC.Types.False
                   SpaceJunk.initCards9
                   SpaceJunk.initCards9) -}
cda11b2d054b20c61d3e218f14b3bce6
  initGame172 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 120#) -}
9f3587cf84fa64f4abd68af61809546f
  initGame173 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   SpaceJunk.initGame174) -}
0ee7729a253008a7e943db373d423861
  initGame174 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\\208\\161\\208\\159 \\208\\154\\208\\190\\209\\128\\209\\128\\208\\181\\208\\186\\209\\130\\208\\189\\208\\190\\209\\129\\209\\130\\209\\140 \\208\\191\\209\\128\\208\\190\\208\\179\\209\\128\\208\\176\\208\\188\\208\\188"#) -}
723420a0753ceaffb935792bf1550a52
  initGame175 :: SpaceJunk.Street
  {- Strictness: m,
     Unfolding: (SpaceJunk.Street
                   SpaceJunk.initGame176
                   SpaceJunk.makeStepFeatures2
                   GHC.Types.False
                   SpaceJunk.initCards9
                   SpaceJunk.initCards9) -}
247cfc53976fea21acbc0bde92a8a259
  initGame176 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   SpaceJunk.initGame177) -}
8c0874e1839d4fbf94eee1dce0e79ab7
  initGame177 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\\208\\161\\208\\159 \\208\\163\\208\\148\\208\\152\\208\\161"#) -}
866ae90397e434bbeb3624188ad488ab
  initGame178 :: SpaceJunk.Street
  {- Strictness: m,
     Unfolding: (SpaceJunk.Street
                   SpaceJunk.initGame60
                   SpaceJunk.initGame182
                   SpaceJunk.initGame181
                   SpaceJunk.initGame180
                   SpaceJunk.initGame179) -}
5f4577d6c5002dfbbdbe0c20438aa3d3
  initGame179 :: GHC.Types.Int
  {- Strictness: x -}
4a6a1e1d83ec039f3e7689cdaefd7d43
  initGame18 :: [SpaceJunk.Street]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ SpaceJunk.Street
                   SpaceJunk.initGame138
                   SpaceJunk.initGame19) -}
a4181374449225d43975963a2037ed58
  initGame180 :: GHC.Types.Int
  {- Strictness: x -}
8b47a1c98d81d0d22fccd31683b69f15
  initGame181 :: GHC.Types.Bool
  {- Strictness: x -}
b6a5972008a998389f3126f0167e3ca6
  initGame182 :: GHC.Types.Int
  {- Strictness: x -}
fa79a175fde77d556d39a86759e69e54
  initGame183 :: SpaceJunk.Street
  {- Strictness: m,
     Unfolding: (SpaceJunk.Street
                   SpaceJunk.initGame184
                   SpaceJunk.makeStepFeatures2
                   GHC.Types.False
                   SpaceJunk.initCards9
                   SpaceJunk.initCards9) -}
0861c39890f86c1cdeaf5b8b1980af6a
  initGame184 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   SpaceJunk.initGame185) -}
4a11fe24a023b9962a850331d3ce7e73
  initGame185 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\\208\\161\\208\\159 \\208\\159\\208\\166\\208\\148"#) -}
98413508cca4eac09100d071b04e982c
  initGame186 :: SpaceJunk.Street
  {- Strictness: m,
     Unfolding: (SpaceJunk.Street
                   SpaceJunk.initGame187
                   SpaceJunk.makeStepFeatures1
                   GHC.Types.False
                   SpaceJunk.initCards9
                   SpaceJunk.initCards9) -}
ee165b54f8ea5a0638f5e89a09a42ab9
  initGame187 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   SpaceJunk.initGame188) -}
2829dcd176b7a33d613c8902800837dc
  initGame188 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\\208\\156\\208\\176\\209\\136\\208\\183\\208\\176\\208\\187 1"#) -}
739eaa855f4cd7d1ef8fcf47e129d1ce
  initGame189 :: SpaceJunk.Street
  {- Strictness: m,
     Unfolding: (SpaceJunk.Street
                   SpaceJunk.initGame192
                   SpaceJunk.makeStepFeatures1
                   SpaceJunk.initGame191
                   SpaceJunk.initCards9
                   SpaceJunk.initGame190) -}
917cef62f7f7a8413dd0c54c254c41f9
  initGame19 :: [SpaceJunk.Street]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ SpaceJunk.Street
                   SpaceJunk.initGame134
                   SpaceJunk.initGame20) -}
5d72601f95dd1a6f9dc67f89030937e3
  initGame190 :: GHC.Types.Int
  {- Strictness: x -}
993927b5ae48bbb50026ac900aa762d4
  initGame191 :: GHC.Types.Bool
  {- Strictness: x -}
84cc50f134f5dca3c71e9724a7acd388
  initGame192 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   SpaceJunk.initGame193) -}
386197104352b7678570ea8e943a2e3a
  initGame193 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\\208\\157\\208\\176\\208\\187\\208\\190\\208\\179"#) -}
c11c05e89382d3904545b4c5f54857aa
  initGame194 :: SpaceJunk.Street
  {- Strictness: m,
     Unfolding: (SpaceJunk.Street
                   SpaceJunk.initGame196
                   SpaceJunk.initGame195
                   GHC.Types.False
                   SpaceJunk.initCards9
                   SpaceJunk.initCards9) -}
8bbcebcf6fa44c08e7b1f2944deb2f91
  initGame195 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 60#) -}
5659344695036719ddfae3ece5ee34a7
  initGame196 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   SpaceJunk.initGame197) -}
b1d57828a789336df78463be7b62bb35
  initGame197 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\\208\\161\\208\\154\\208\\152 \\208\\159\\208\\176\\209\\128\\208\\176\\208\\187\\208\\187\\208\\181\\208\\187\\209\\140\\208\\189\\209\\139\\208\\181 \\208\\178\\209\\139\\209\\135\\208\\184\\209\\129\\208\\187\\208\\181\\208\\189\\208\\184\\209\\143"#) -}
3633e4638978cd106d79a0fd81fbd7df
  initGame198 :: SpaceJunk.Street
  {- Strictness: m,
     Unfolding: (SpaceJunk.Street
                   SpaceJunk.initGame142
                   SpaceJunk.initGame201
                   GHC.Types.False
                   SpaceJunk.initGame200
                   SpaceJunk.initGame199) -}
d3fc3b303bc8175b196f5b80de041482
  initGame199 :: GHC.Types.Int
  {- Strictness: x -}
cd7e0110d59c9bfd60cdaf68effb8360
  initGame2 :: [SpaceJunk.Street]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ SpaceJunk.Street
                   SpaceJunk.initGame202
                   SpaceJunk.initGame3) -}
fb97093c24b18932ee50cdce1ffe2b1d
  initGame20 :: [SpaceJunk.Street]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ SpaceJunk.Street
                   SpaceJunk.initGame131
                   SpaceJunk.initGame21) -}
94d541377776c6465478b5b13eea2b30
  initGame200 :: GHC.Types.Int
  {- Strictness: x -}
d303ba113451d13aca1d312474d1d8d4
  initGame201 :: GHC.Types.Int
  {- Strictness: x -}
d22b621b3c4b11654b164530c6b43243
  initGame202 :: SpaceJunk.Street
  {- Strictness: m,
     Unfolding: (SpaceJunk.Street
                   SpaceJunk.initGame203
                   SpaceJunk.initGame195
                   GHC.Types.False
                   SpaceJunk.initCards9
                   SpaceJunk.initCards9) -}
c13fe1fada54f659df5cfebccfd99a33
  initGame203 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   SpaceJunk.initGame204) -}
93db579c655c2b2be08c5f1a46d7d15c
  initGame204 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\\208\\161\\208\\154\\208\\152 \\208\\154\\208\\178\\208\\176\\208\\189\\209\\130\\208\\190\\208\\178\\208\\176\\209\\143 \\208\\184\\208\\189\\209\\132\\208\\190\\209\\128\\208\\188\\208\\176\\209\\130\\208\\184\\208\\186\\208\\176"#) -}
abcbb8d03c88195fbcf73f43b1b7e3aa
  initGame205 :: SpaceJunk.Street
  {- Strictness: m,
     Unfolding: (SpaceJunk.Street
                   SpaceJunk.initGame210
                   SpaceJunk.initGame209
                   SpaceJunk.initGame208
                   SpaceJunk.initGame207
                   SpaceJunk.initGame206) -}
cd0ce7733cd69bb186ca4e3ea6b645b3
  initGame206 :: GHC.Types.Int
  {- Strictness: x -}
a9dc73f5bc275ff0b4beb0f1c80b285c
  initGame207 :: GHC.Types.Int
  {- Strictness: x -}
9a03f9ef22c94840f40834749939ada6
  initGame208 :: GHC.Types.Bool
  {- Strictness: x -}
b2ebdb7eb84d5f1f38b6cfca89d4a9c3
  initGame209 :: GHC.Types.Int
  {- Strictness: x -}
ba99779b231ff7cf173a44b3d29d7e94
  initGame21 :: [SpaceJunk.Street]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ SpaceJunk.Street
                   SpaceJunk.initGame124
                   SpaceJunk.initGame22) -}
1d0cb09e4a185f075b43564e055171ca
  initGame210 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   SpaceJunk.initGame211) -}
686ee0cb748ab3dbb0b071bbc431a04a
  initGame211 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\\208\\161\\209\\130\\208\\176\\209\\128\\209\\130"#) -}
14d99989a137af60e45984c503ccd609
  initGame212 :: SpaceJunk.Cubes
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (SpaceJunk.Cubes
                   SpaceJunk.doStep3
                   SpaceJunk.initCards9) -}
6d8e3c211179837e02f73bd0610629f4
  initGame213 :: [SpaceJunk.Player]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ SpaceJunk.Player
                   SpaceJunk.initGame224
                   SpaceJunk.initGame214) -}
3c67430c28a902553a318651ec7bbeaf
  initGame214 :: [SpaceJunk.Player]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ SpaceJunk.Player
                   SpaceJunk.initGame222
                   SpaceJunk.initGame215) -}
d6f9b99e5910e3df8a81450ddfdea782
  initGame215 :: [SpaceJunk.Player]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ SpaceJunk.Player
                   SpaceJunk.initGame220
                   SpaceJunk.initGame216) -}
a65993b0f36f5a05bcd14e0456367970
  initGame216 :: [SpaceJunk.Player]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ SpaceJunk.Player
                   SpaceJunk.initGame217
                   (GHC.Types.[] @ SpaceJunk.Player)) -}
590ec86016b2007fe3c4e898dba2fe2c
  initGame217 :: SpaceJunk.Player
  {- Strictness: m,
     Unfolding: (SpaceJunk.Player
                   SpaceJunk.initCards10
                   SpaceJunk.initGame219
                   (GHC.Types.[] @ SpaceJunk.Street)
                   SpaceJunk.doStep3
                   SpaceJunk.initGame218) -}
a404345820013b4747e50ab1d6d9ebee
  initGame218 :: Graphics.Gloss.Internals.Data.Picture.Point
  {- Unfolding: (case SpaceJunk.$wgetPlayerPosition
                        SpaceJunk.initCards10
                        1# of ww { (#,#) ww1 ww2 ->
                 (ww1, ww2) }) -}
a1a2212dd75a82a29382f6fdbf989eeb
  initGame219 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 15000#) -}
9014b21fb943a11ca71f037fe92d7afc
  initGame22 :: [SpaceJunk.Street]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ SpaceJunk.Street
                   SpaceJunk.initGame121
                   SpaceJunk.initGame23) -}
759d316bc0b35c0211fd0ba1b0f6e53a
  initGame220 :: SpaceJunk.Player
  {- Strictness: m,
     Unfolding: (SpaceJunk.Player
                   SpaceJunk.initCards15
                   SpaceJunk.initGame219
                   (GHC.Types.[] @ SpaceJunk.Street)
                   SpaceJunk.doStep3
                   SpaceJunk.initGame221) -}
1a3a9890c08d861ca886c7b0d86a5eb5
  initGame221 :: Graphics.Gloss.Internals.Data.Picture.Point
  {- Unfolding: (case SpaceJunk.$wgetPlayerPosition
                        SpaceJunk.initCards15
                        1# of ww { (#,#) ww1 ww2 ->
                 (ww1, ww2) }) -}
931e2aaedbb89e0ede868aeaa9af231a
  initGame222 :: SpaceJunk.Player
  {- Strictness: m,
     Unfolding: (SpaceJunk.Player
                   SpaceJunk.doStep2
                   SpaceJunk.initGame219
                   (GHC.Types.[] @ SpaceJunk.Street)
                   SpaceJunk.doStep3
                   SpaceJunk.initGame223) -}
a0b92de4473f9e4c781af0e7e00ee5d0
  initGame223 :: Graphics.Gloss.Internals.Data.Picture.Point
  {- Unfolding: (case SpaceJunk.$wgetPlayerPosition
                        SpaceJunk.doStep2
                        1# of ww { (#,#) ww1 ww2 ->
                 (ww1, ww2) }) -}
dc2ef1c17e977cc3c1b234f71216a95a
  initGame224 :: SpaceJunk.Player
  {- Strictness: m,
     Unfolding: (SpaceJunk.Player
                   SpaceJunk.doStep3
                   SpaceJunk.initGame219
                   (GHC.Types.[] @ SpaceJunk.Street)
                   SpaceJunk.doStep3
                   SpaceJunk.initGame225) -}
f09f38821e337d8c15d20f05b9f34b30
  initGame225 :: Graphics.Gloss.Internals.Data.Picture.Point
  {- Unfolding: (case SpaceJunk.$wgetPlayerPosition
                        SpaceJunk.doStep3
                        1# of ww { (#,#) ww1 ww2 ->
                 (ww1, ww2) }) -}
512e86c69508fa472cb0053fab58160b
  initGame23 :: [SpaceJunk.Street]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ SpaceJunk.Street
                   SpaceJunk.initGame116
                   SpaceJunk.initGame24) -}
9781463955372ea701231425e27def6c
  initGame24 :: [SpaceJunk.Street]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ SpaceJunk.Street
                   SpaceJunk.initGame112
                   SpaceJunk.initGame25) -}
5fa4091c9d90f3737207a38cd4b8c601
  initGame25 :: [SpaceJunk.Street]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ SpaceJunk.Street
                   SpaceJunk.initGame108
                   SpaceJunk.initGame26) -}
339e0556126072d36aa21062b5d89d6c
  initGame26 :: [SpaceJunk.Street]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ SpaceJunk.Street
                   SpaceJunk.initGame105
                   SpaceJunk.initGame27) -}
76d9b16cd232aa6799a4013725beadd7
  initGame27 :: [SpaceJunk.Street]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ SpaceJunk.Street
                   SpaceJunk.initGame102
                   SpaceJunk.initGame28) -}
0d04474e3518c40edc8072498d3d803f
  initGame28 :: [SpaceJunk.Street]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ SpaceJunk.Street
                   SpaceJunk.initGame98
                   SpaceJunk.initGame29) -}
2eafafd69ce20d2f783d710d5801826a
  initGame29 :: [SpaceJunk.Street]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ SpaceJunk.Street
                   SpaceJunk.initGame94
                   SpaceJunk.initGame30) -}
726172b854a5a974b3a4212b59110bd5
  initGame3 :: [SpaceJunk.Street]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ SpaceJunk.Street
                   SpaceJunk.initGame198
                   SpaceJunk.initGame4) -}
63c666580f77d25552a1fd4d3055ab64
  initGame30 :: [SpaceJunk.Street]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ SpaceJunk.Street
                   SpaceJunk.initGame90
                   SpaceJunk.initGame31) -}
a540f80e80290fdae7328950cfc1d35a
  initGame31 :: [SpaceJunk.Street]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ SpaceJunk.Street
                   SpaceJunk.initGame83
                   SpaceJunk.initGame32) -}
23323bf2093bee4602614bc9f10bf0fd
  initGame32 :: [SpaceJunk.Street]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ SpaceJunk.Street
                   SpaceJunk.initGame80
                   SpaceJunk.initGame33) -}
4795963185b02e85793f5d1c6ff48172
  initGame33 :: [SpaceJunk.Street]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ SpaceJunk.Street
                   SpaceJunk.initGame76
                   SpaceJunk.initGame34) -}
dada880c329428fb8812ed006c34a438
  initGame34 :: [SpaceJunk.Street]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ SpaceJunk.Street
                   SpaceJunk.initGame69
                   SpaceJunk.initGame35) -}
ea5f1a7eccf47ff69e12da847d483714
  initGame35 :: [SpaceJunk.Street]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ SpaceJunk.Street
                   SpaceJunk.initGame65
                   SpaceJunk.initGame36) -}
6969ac1eab335d665ea65d0b3cf1418f
  initGame36 :: [SpaceJunk.Street]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ SpaceJunk.Street
                   SpaceJunk.initGame62
                   SpaceJunk.initGame37) -}
9e8d843470e1230814a2724e02edcff0
  initGame37 :: [SpaceJunk.Street]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ SpaceJunk.Street
                   SpaceJunk.initGame55
                   SpaceJunk.initGame38) -}
441a7756aa959a9a2517137c506b5a04
  initGame38 :: [SpaceJunk.Street]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ SpaceJunk.Street
                   SpaceJunk.initGame51
                   SpaceJunk.initGame39) -}
2f2f34e7d69143a44b175831c7707d4b
  initGame39 :: [SpaceJunk.Street]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ SpaceJunk.Street
                   SpaceJunk.initGame45
                   SpaceJunk.initGame40) -}
54f4a3f770db4f039f65bbae948123ec
  initGame4 :: [SpaceJunk.Street]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ SpaceJunk.Street
                   SpaceJunk.initGame194
                   SpaceJunk.initGame5) -}
0f0b01a954179584d0c604543ffe8567
  initGame40 :: [SpaceJunk.Street]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ SpaceJunk.Street
                   SpaceJunk.initGame41
                   (GHC.Types.[] @ SpaceJunk.Street)) -}
a7260ed353bae33a93af63a7bf901217
  initGame41 :: SpaceJunk.Street
  {- Strictness: m,
     Unfolding: (SpaceJunk.Street
                   SpaceJunk.initGame43
                   SpaceJunk.initGame42
                   GHC.Types.False
                   SpaceJunk.initCards9
                   SpaceJunk.initCards9) -}
3ecc5be6a14ec95d42e8c77df1b7d231
  initGame42 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 400#) -}
14f1825f9fc941f8397cab5cc9901f0a
  initGame43 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   SpaceJunk.initGame44) -}
0973e6f87f9b679dfaec78713b004b4c
  initGame44 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\\208\\156\\208\\156\\208\\159 \\208\\145\\208\\156\\208\\156\\208\\158"#) -}
2f73e3b6a04f01a44c09ef437195ba38
  initGame45 :: SpaceJunk.Street
  {- Strictness: m,
     Unfolding: (SpaceJunk.Street
                   SpaceJunk.initGame49
                   SpaceJunk.makeStepFeatures2
                   SpaceJunk.initGame48
                   SpaceJunk.initGame47
                   SpaceJunk.initGame46) -}
1ee5f99e7fc673dd2c87abc7e0e359c5
  initGame46 :: GHC.Types.Int
  {- Strictness: x -}
f5e679cd3ba6873addf6cc70d6da07eb
  initGame47 :: GHC.Types.Int
  {- Strictness: x -}
cfdcce1ac80bea509a35d6995cf1fe7d
  initGame48 :: GHC.Types.Bool
  {- Strictness: x -}
5260d2daa147be34e04161701ca5cedf
  initGame49 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   SpaceJunk.initGame50) -}
28d6379a6163653d5192eb03514a7f71
  initGame5 :: [SpaceJunk.Street]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ SpaceJunk.Street
                   SpaceJunk.initGame189
                   SpaceJunk.initGame6) -}
f314eebc81e1214d69e002f3ecaf21af
  initGame50 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\\208\\161\\208\\178\\208\\181\\209\\128\\209\\133\\208\\189\\208\\176\\208\\187\\208\\190\\208\\179"#) -}
fbd8572be5177afa61d0e5c8fbffb46e
  initGame51 :: SpaceJunk.Street
  {- Strictness: m,
     Unfolding: (SpaceJunk.Street
                   SpaceJunk.initGame53
                   SpaceJunk.initGame52
                   GHC.Types.False
                   SpaceJunk.initCards9
                   SpaceJunk.initCards9) -}
ff6ca1d40c3132be412ac225ac0ddaf5
  initGame52 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 350#) -}
4bca10bd8d361220f09d92790ed9324d
  initGame53 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   SpaceJunk.initGame54) -}
fecde6ae683b401579359c84e1feb15a
  initGame54 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\\208\\156\\208\\156\\208\\159 \\208\\156\\208\\144\\208\\162"#) -}
4e94750011d3a5fe29446cde3fb403cb
  initGame55 :: SpaceJunk.Street
  {- Strictness: m,
     Unfolding: (SpaceJunk.Street
                   SpaceJunk.initGame60
                   SpaceJunk.initGame59
                   SpaceJunk.initGame58
                   SpaceJunk.initGame57
                   SpaceJunk.initGame56) -}
cafd4cfc7ffdaf59bc7561ecaf316dd0
  initGame56 :: GHC.Types.Int
  {- Strictness: x -}
24bdac004da54a8ec001ce043cd9af22
  initGame57 :: GHC.Types.Int
  {- Strictness: x -}
9579ffa294cfe1763ecd712d63fc03d4
  initGame58 :: GHC.Types.Bool
  {- Strictness: x -}
20d0d14d0c5eb3c70ae4aadc41ed7494
  initGame59 :: GHC.Types.Int
  {- Strictness: x -}
021b16d41c315c9a905fd532624457a6
  initGame6 :: [SpaceJunk.Street]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ SpaceJunk.Street
                   SpaceJunk.initGame186
                   SpaceJunk.initGame7) -}
54463fe9ec0854e1bc5f44c37ac84554
  initGame60 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   SpaceJunk.initGame61) -}
ad2b409c3f9a5cdaf12d3a67fadab4ea
  initGame61 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\\208\\168\\208\\176\\208\\189\\209\\129"#) -}
bc3b5c97f91143c769efd9b45778de9a
  initGame62 :: SpaceJunk.Street
  {- Strictness: m,
     Unfolding: (SpaceJunk.Street
                   SpaceJunk.initGame63
                   SpaceJunk.makeStepFeatures1
                   GHC.Types.False
                   SpaceJunk.initCards9
                   SpaceJunk.initCards9) -}
13f64343c1f4d769abe048e34cc1a463
  initGame63 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   SpaceJunk.initGame64) -}
0d0dde58c5acf4cc144bf882902f22b0
  initGame64 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\\208\\156\\208\\176\\209\\136\\208\\183\\208\\176\\208\\187 4"#) -}
63b3f9638ba4f9a293a180910316041a
  initGame65 :: SpaceJunk.Street
  {- Strictness: m,
     Unfolding: (SpaceJunk.Street
                   SpaceJunk.initGame67
                   SpaceJunk.initGame66
                   GHC.Types.False
                   SpaceJunk.initCards9
                   SpaceJunk.initCards9) -}
9c0860cc75dfb41303626fdfd02eee23
  initGame66 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 320#) -}
625d1cf6aabb0b153ffa310baebb7a17
  initGame67 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   SpaceJunk.initGame68) -}
a345f16eff1901a1125ea24375bdcb17
  initGame68 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\\208\\144\\208\\175 \\208\\152\\209\\129\\208\\186\\209\\131\\209\\129\\209\\129\\209\\130\\208\\178\\208\\181\\208\\189\\208\\189\\209\\139\\208\\185 \\208\\184\\208\\189\\209\\130\\208\\181\\208\\187\\208\\187\\208\\181\\208\\186\\209\\130"#) -}
d2832b5e4affc9227615b89c7ad55a9c
  initGame69 :: SpaceJunk.Street
  {- Strictness: m,
     Unfolding: (SpaceJunk.Street
                   SpaceJunk.initGame74
                   SpaceJunk.initGame73
                   SpaceJunk.initGame72
                   SpaceJunk.initGame71
                   SpaceJunk.initGame70) -}
7effaf6878c8f0dd28e2be5fa863a7fd
  initGame7 :: [SpaceJunk.Street]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ SpaceJunk.Street
                   SpaceJunk.initGame183
                   SpaceJunk.initGame8) -}
cfdbdf99310b2e54e4f3443785eccb40
  initGame70 :: GHC.Types.Int
  {- Strictness: x -}
704bb7988d31a667bb90aa989760be78
  initGame71 :: GHC.Types.Int
  {- Strictness: x -}
65dd3a0dab30ccf60b391116b79a7b96
  initGame72 :: GHC.Types.Bool
  {- Strictness: x -}
dcf7ba6e2d173b4a1a72f1dd2991a7ca
  initGame73 :: GHC.Types.Int
  {- Strictness: x -}
057a2fb3aa14e49805a527c5cc08315e
  initGame74 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   SpaceJunk.initGame75) -}
f93b42727ddd0f2ca9a6b09879507ad3
  initGame75 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\\208\\158\\208\\177\\209\\137\\208\\181\\209\\129\\209\\130\\208\\178\\208\\181\\208\\189\\208\\176\\209\\143 \\208\\186\\208\\176\\208\\183\\208\\189\\208\\176"#) -}
a5f354f68ff56881f704ea1e502f7f91
  initGame76 :: SpaceJunk.Street
  {- Strictness: m,
     Unfolding: (SpaceJunk.Street
                   SpaceJunk.initGame78
                   SpaceJunk.initGame77
                   GHC.Types.False
                   SpaceJunk.initCards9
                   SpaceJunk.initCards9) -}
768c84052dcb385153cf13b4923c4fab
  initGame77 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 300#) -}
a147ed7114ddae9bdeb744d6123ccf46
  initGame78 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   SpaceJunk.initGame79) -}
83fb6b843882aec10cce13389e4f7add
  initGame79 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\\208\\144\\208\\175 \\208\\154\\208\\190\\208\\188\\208\\191\\209\\140\\209\\142\\209\\130\\208\\181\\209\\128\\208\\189\\208\\176\\209\\143 \\208\\187\\208\\184\\208\\189\\208\\179\\208\\178\\208\\184\\209\\129\\209\\130\\208\\184\\208\\186\\208\\176"#) -}
727ed73b1ecb17059802e51b1f1efafb
  initGame8 :: [SpaceJunk.Street]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ SpaceJunk.Street
                   SpaceJunk.initGame178
                   SpaceJunk.initGame9) -}
9c662f0525794ce1c302d05675703a2b
  initGame80 :: SpaceJunk.Street
  {- Strictness: m,
     Unfolding: (SpaceJunk.Street
                   SpaceJunk.initGame81
                   SpaceJunk.initGame77
                   GHC.Types.False
                   SpaceJunk.initCards9
                   SpaceJunk.initCards9) -}
33d4bfdec4b120f63e7a2fcc7626fa8a
  initGame81 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   SpaceJunk.initGame82) -}
b9aeeba95ad4a74df186a81f2c9c20e1
  initGame82 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\\208\\144\\208\\175 \\208\\159\\208\\176\\209\\128\\208\\176\\208\\180\\208\\184\\208\\179\\208\\188\\209\\139 \\208\\191\\209\\128\\208\\190\\208\\179\\209\\128\\208\\176\\208\\188\\208\\188\\208\\184\\209\\128\\208\\190\\208\\178\\208\\176\\208\\189\\208\\184\\209\\143"#) -}
5f2c0fdb41c2a982486113d1670dbe57
  initGame83 :: SpaceJunk.Street
  {- Strictness: m,
     Unfolding: (SpaceJunk.Street
                   SpaceJunk.initGame88
                   SpaceJunk.initGame87
                   SpaceJunk.initGame86
                   SpaceJunk.initGame85
                   SpaceJunk.initGame84) -}
e786530f9448e900c1d20e40f22bd6f4
  initGame84 :: GHC.Types.Int
  {- Strictness: x -}
077aa1acd3787b3dc8b6796e276e0976
  initGame85 :: GHC.Types.Int
  {- Strictness: x -}
7a7eeb2b576b347e7ec11fca1bd1b6b2
  initGame86 :: GHC.Types.Bool
  {- Strictness: x -}
f1864b4a22374ad7b1d3ced432cac362
  initGame87 :: GHC.Types.Int
  {- Strictness: x -}
53e4f9dca12eadd0087ab261b62b3c8d
  initGame88 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   SpaceJunk.initGame89) -}
36cd124eb2bec7cf5f768c0e3ffa0492
  initGame89 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\\208\\158\\209\\130\\208\\191\\209\\128\\208\\176\\208\\178\\208\\187\\209\\143\\208\\185\\209\\129\\209\\143 \\208\\178 \\208\\176\\208\\186\\208\\176\\208\\180\\208\\181\\208\\188"#) -}
643db7fdae740419579f3d160d20ee5f
  initGame9 :: [SpaceJunk.Street]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ SpaceJunk.Street
                   SpaceJunk.initGame175
                   SpaceJunk.initGame10) -}
7caa5626604c0a90b5ef6902f475872a
  initGame90 :: SpaceJunk.Street
  {- Strictness: m,
     Unfolding: (SpaceJunk.Street
                   SpaceJunk.initGame92
                   SpaceJunk.initGame91
                   GHC.Types.False
                   SpaceJunk.initCards9
                   SpaceJunk.initCards9) -}
c400cd34337b51df3b201712b1eaef26
  initGame91 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 280#) -}
559821679e9888eeb5bf0ab89cd45dd0
  initGame92 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   SpaceJunk.initGame93) -}
ec0ab4619a5f44f31580acf893eb6927
  initGame93 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\\208\\144\\208\\161\\208\\146\\208\\154 \\208\\156\\208\\181\\208\\180\\208\\184\\208\\176\\208\\187\\208\\176\\208\\177"#) -}
8ec22976bfa0f67baa29f2610b257351
  initGame94 :: SpaceJunk.Street
  {- Strictness: m,
     Unfolding: (SpaceJunk.Street
                   SpaceJunk.initGame96
                   SpaceJunk.initGame95
                   GHC.Types.False
                   SpaceJunk.initCards9
                   SpaceJunk.initCards9) -}
2df731f437ee5828c3749d0bb8c08a61
  initGame95 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 150#) -}
4a8509b394cfa5290ae8890ab2de4031
  initGame96 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   SpaceJunk.initGame97) -}
d5fcf48350ed004469faf1ecfc68fbaf
  initGame97 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\\208\\162\\208\\181\\209\\133\\208\\189\\208\\190\\209\\129\\209\\132\\208\\181\\209\\128\\208\\176"#) -}
7d2169d0b376d0810c95364c3603508f
  initGame98 :: SpaceJunk.Street
  {- Strictness: m,
     Unfolding: (SpaceJunk.Street
                   SpaceJunk.initGame100
                   SpaceJunk.initGame99
                   GHC.Types.False
                   SpaceJunk.initCards9
                   SpaceJunk.initCards9) -}
95a0d0795dc86a0a6627e343cd741cf5
  initGame99 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 260#) -}
8312df8b67eb040eb255ce1a876c3611
  initPay :: SpaceJunk.GameState -> SpaceJunk.GameState
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U,U,U,U)>m,
     Unfolding: InlineRule (1, True, True)
                (\ (gameState :: SpaceJunk.GameState) -> gameState) -}
8cd15ecc79a735481c26d9e7c9d0bd29
  isPay ::
    Graphics.Gloss.Internals.Data.Picture.Point
    -> GHC.Base.Maybe GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S(S)L),1*U(1*U(U),U(U))>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Graphics.Gloss.Internals.Data.Picture.Point) ->
                 case w of ww { (,) ww1 ww2 ->
                 case ww1 of ww3 { GHC.Types.F# ww4 ->
                 SpaceJunk.$wisPay ww4 ww2 } }) -}
441b1db5f66655dd6c226c112b935bfd
  isRent :: SpaceJunk.Street -> GHC.Types.Bool
  RecSel Left SpaceJunk.Street
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLSLL),1*U(A,A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: SpaceJunk.Street) ->
                 case ds of wild { SpaceJunk.Street ds1 ds2 ds3 ds4 ds5 -> ds3 }) -}
251f0b32f586808b851d222c003a7e46
  isStep ::
    Graphics.Gloss.Internals.Data.Picture.Point -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Graphics.Gloss.Internals.Data.Picture.Point) ->
                 GHC.Types.True) -}
5435226acbe79105f2e3ef4b8114e923
  isntPay ::
    Graphics.Gloss.Internals.Data.Picture.Point -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S(S)L),1*U(1*U(U),A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: (GHC.Types.Float, GHC.Types.Float)) ->
                 case ds of wild { (,) x y ->
                 case x of wild1 { GHC.Types.F# x1 ->
                 GHC.Prim.tagToEnum#
                   @ GHC.Types.Bool
                   (GHC.Prim.gtFloat# x1 0.0#) } }) -}
8b5d96e2da0cc4325a8c4232fed1f2ac
  land :: SpaceJunk.GameState -> [SpaceJunk.Street]
  RecSel Left SpaceJunk.GameState
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSL),1*U(A,A,A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: SpaceJunk.GameState) ->
                 case ds of wild { SpaceJunk.GameState ds1 ds2 ds3 ds4 ds5 ds6 ->
                 ds5 }) -}
e8d8d916eb2cfcedfb8dba5e0fea6156
  loadImages :: GHC.Types.IO SpaceJunk.Images
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                SpaceJunk.loadImages1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <SpaceJunk.Images>_R)) -}
50f6fe064aebc31b276ddba173cbea5c
  loadImages1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, SpaceJunk.Images #)
  {- Arity: 1, Strictness: <S,U> -}
39ed89f254e15499015a802541cfa026
  makeMove :: SpaceJunk.GameState -> SpaceJunk.GameState
  {- Arity: 1, Strictness: <S,1*U(U,U(U),U,A,U,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (gameState :: SpaceJunk.GameState) ->
                 case gameState of wild { SpaceJunk.GameState ds ds1 ds2 ds3 ds4 ds5 ->
                 SpaceJunk.makeStepFeatures
                   (SpaceJunk.changePlayerCell
                      (SpaceJunk.GameState ds ds1 ds2 SpaceJunk.doStep1 ds4 ds5)) }) -}
1129ea401c2ba5412716ca96a4dd79fe
  makePay :: SpaceJunk.GameState -> SpaceJunk.GameState
  {- Arity: 1, Strictness: <S,1*U(U,1*U(U),U,U,U,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (gameState :: SpaceJunk.GameState) ->
                 case gameState of wild { SpaceJunk.GameState ds ds1 ds2 ds3 ds4 ds5 ->
                 SpaceJunk.GameState
                   ds
                   (case ds1 of wild1 { GHC.Types.I# x ->
                    GHC.Types.I# (GHC.Prim.+# (GHC.Prim.andI# x 3#) 1#) })
                   ds2
                   ds3
                   ds4
                   SpaceJunk.handleGame3 }) -}
64d452530a7a71285cf8fec6c7b078c8
  makeStepFeatures :: SpaceJunk.GameState -> SpaceJunk.GameState
  {- Arity: 1, Strictness: <S(LLLLLS),1*U(U,U(U),U,U,U,U)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: SpaceJunk.GameState) ->
                 case w of ww { SpaceJunk.GameState ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case SpaceJunk.$wmakeStepFeatures
                        ww1
                        ww2
                        ww3
                        ww4
                        ww5
                        ww6 of ww7 { (#,,,,,#) ww8 ww9 ww10 ww11 ww12 ww13 ->
                 SpaceJunk.GameState ww8 ww9 ww10 ww11 ww12 ww13 } }) -}
4255b6fe49c8b2e9a58969728bba37dd
  makeStepFeatures1 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 200#) -}
8e966f1804c97e1ba9ef621e1fbf8375
  makeStepFeatures2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 100#) -}
64cc4e0886c11913019d59ff2f01426d
  money :: SpaceJunk.Player -> GHC.Types.Int
  RecSel Left SpaceJunk.Player
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLL),1*U(A,1*U(U),A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: SpaceJunk.Player) ->
                 case ds of wild { SpaceJunk.Player ds1 ds2 ds3 ds4 ds5 -> ds2 }) -}
4dc8fb084e8d486ec1dc44d7b502a8f6
  move :: SpaceJunk.Physical a => GHC.Types.Float -> a -> a
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(LLC(C(S))L),U(1*C1(U),A,1*C1(C1(U)),A)><L,A><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   ($dPhysical :: SpaceJunk.Physical a)
                   (dt :: GHC.Types.Float)
                   (object :: a) ->
                 SpaceJunk.setPosition
                   @ a
                   $dPhysical
                   (SpaceJunk.getPosition @ a $dPhysical object)
                   object) -}
a40c07fc57471cea43647a31ec173e4a
  movePlayer ::
    SpaceJunk.Player
    -> GHC.Types.Int -> GHC.Types.Int -> SpaceJunk.Player
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S,1*U(U,U,U,U(U),A)><L,1*U(U)><L,U(U)>m, Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: SpaceJunk.Player)
                   (w1 :: GHC.Types.Int)
                   (w2 :: GHC.Types.Int) ->
                 case w of ww { SpaceJunk.Player ww1 ww2 ww3 ww4 ww5 ->
                 SpaceJunk.Player
                   ww1
                   ww2
                   ww3
                   (case ww4 of wild { GHC.Types.I# x ->
                    case w2 of wild1 { GHC.Types.I# y ->
                    case GHC.Classes.modInt#
                           (GHC.Prim.-# (GHC.Prim.+# x y) 1#)
                           40# of ww6 { DEFAULT ->
                    GHC.Types.I# (GHC.Prim.+# ww6 1#) } } })
                   (case ww4 of wild { GHC.Types.I# x ->
                    case w2 of wild1 { GHC.Types.I# y ->
                    case GHC.Classes.modInt#
                           (GHC.Prim.-# (GHC.Prim.+# x y) 1#)
                           40# of ww6 { DEFAULT ->
                    case SpaceJunk.$wgetPlayerPosition
                           w1
                           (GHC.Prim.+# ww6 1#) of ww7 { (#,#) ww8 ww9 ->
                    (ww8, ww9) } } } }) }) -}
441b1db5f66655dd6c226c112b935bfd
  name :: SpaceJunk.Street -> GHC.Base.String
  RecSel Left SpaceJunk.Street
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLLLL),1*U(1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: SpaceJunk.Street) ->
                 case ds of wild { SpaceJunk.Street ds1 ds2 ds3 ds4 ds5 -> ds1 }) -}
63ff3c3451c06f0ee2c60246a1c7a5c6
  num :: SpaceJunk.ChanceCard -> GHC.Types.Int
  RecSel Left SpaceJunk.ChanceCard
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLL),1*U(1*U(U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: SpaceJunk.ChanceCard) ->
                 case ds of wild { SpaceJunk.ChanceCard ds1 ds2 ds3 -> ds1 }) -}
441b1db5f66655dd6c226c112b935bfd
  owner :: SpaceJunk.Street -> GHC.Types.Int
  RecSel Left SpaceJunk.Street
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLS),1*U(A,A,A,A,1*U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: SpaceJunk.Street) ->
                 case ds of wild { SpaceJunk.Street ds1 ds2 ds3 ds4 ds5 -> ds5 }) -}
6d7c49c2c9167775ad4ef5db0158b790
  payPrictRent :: SpaceJunk.GameState -> SpaceJunk.GameState
  {- Arity: 1, Strictness: <S,1*U(U,U(U),U,U,U,U)>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: SpaceJunk.GameState) ->
                 case w of ww { SpaceJunk.GameState ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case SpaceJunk.$wpayPrictRent
                        ww1
                        ww2
                        ww3
                        ww4
                        ww5
                        ww6 of ww7 { (#,,,,,#) ww8 ww9 ww10 ww11 ww12 ww13 ->
                 SpaceJunk.GameState ww8 ww9 ww10 ww11 ww12 ww13 } }) -}
6ab80b4fc6b735de8cbb5705135e5198
  payTax ::
    SpaceJunk.GameState -> GHC.Types.Int -> SpaceJunk.GameState
  {- Arity: 2, Strictness: <S,1*U(U,U(U),U,U,U,U)><L,1*U(U)>m,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: SpaceJunk.GameState) (w1 :: GHC.Types.Int) ->
                 case w of ww { SpaceJunk.GameState ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case SpaceJunk.$wpayTax
                        ww1
                        ww2
                        ww3
                        ww4
                        ww5
                        ww6
                        w1 of ww7 { (#,,,,,#) ww8 ww9 ww10 ww11 ww12 ww13 ->
                 SpaceJunk.GameState ww8 ww9 ww10 ww11 ww12 ww13 } }) -}
64cc4e0886c11913019d59ff2f01426d
  playerCell :: SpaceJunk.Player -> GHC.Types.Int
  RecSel Left SpaceJunk.Player
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSL),1*U(A,A,A,1*U(U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: SpaceJunk.Player) ->
                 case ds of wild { SpaceJunk.Player ds1 ds2 ds3 ds4 ds5 -> ds4 }) -}
64cc4e0886c11913019d59ff2f01426d
  playerPosition ::
    SpaceJunk.Player -> Graphics.Gloss.Internals.Data.Picture.Point
  RecSel Left SpaceJunk.Player
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLS),1*U(A,A,A,A,1*U(U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: SpaceJunk.Player) ->
                 case ds of wild { SpaceJunk.Player ds1 ds2 ds3 ds4 ds5 -> ds5 }) -}
8b5d96e2da0cc4325a8c4232fed1f2ac
  players :: SpaceJunk.GameState -> [SpaceJunk.Player]
  RecSel Left SpaceJunk.GameState
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLL),1*U(1*U,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: SpaceJunk.GameState) ->
                 case ds of wild { SpaceJunk.GameState ds1 ds2 ds3 ds4 ds5 ds6 ->
                 ds1 }) -}
441b1db5f66655dd6c226c112b935bfd
  price :: SpaceJunk.Street -> GHC.Types.Int
  RecSel Left SpaceJunk.Street
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLL),1*U(A,1*U(U),A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: SpaceJunk.Street) ->
                 case ds of wild { SpaceJunk.Street ds1 ds2 ds3 ds4 ds5 -> ds2 }) -}
63ff3c3451c06f0ee2c60246a1c7a5c6
  price2 :: SpaceJunk.ChanceCard -> GHC.Types.Int
  RecSel Left SpaceJunk.ChanceCard
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,1*U(U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: SpaceJunk.ChanceCard) ->
                 case ds of wild { SpaceJunk.ChanceCard ds1 ds2 ds3 -> ds2 }) -}
441b1db5f66655dd6c226c112b935bfd
  priceRent :: SpaceJunk.Street -> GHC.Types.Int
  RecSel Left SpaceJunk.Street
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSL),1*U(A,A,A,1*U(U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: SpaceJunk.Street) ->
                 case ds of wild { SpaceJunk.Street ds1 ds2 ds3 ds4 ds5 -> ds4 }) -}
64cc4e0886c11913019d59ff2f01426d
  property :: SpaceJunk.Player -> [SpaceJunk.Street]
  RecSel Left SpaceJunk.Player
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLSLL),1*U(A,A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: SpaceJunk.Player) ->
                 case ds of wild { SpaceJunk.Player ds1 ds2 ds3 ds4 ds5 -> ds3 }) -}
6fad21d750c50fd19eb60ab4a06ed924
  satelliteRotationSpeed :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.F# 0.1#) -}
cc3d644d7700ded8a62a7ddb39115d8c
  screenHeight :: GHC.Num.Num a => a
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLC(S)),1*U(A,A,A,A,A,A,1*C1(U))>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a ($dNum :: GHC.Num.Num a) ->
                 GHC.Num.fromInteger @ a $dNum SpaceJunk.screenHeight1) -}
4cdb0676ed9730a7e0125e8c6797b2f7
  screenHeight1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (800) -}
0b05c317e9acbc5f7b66233b3f43fed5
  screenWidth :: GHC.Num.Num a => a
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLC(S)),1*U(A,A,A,A,A,A,1*C1(U))>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a ($dNum :: GHC.Num.Num a) ->
                 GHC.Num.fromInteger @ a $dNum SpaceJunk.screenHeight1) -}
1d1d9b7a21613a07db2f63f349b29910
  secondCube :: SpaceJunk.Cubes -> GHC.Types.Int
  RecSel Left SpaceJunk.Cubes
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,1*U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: SpaceJunk.Cubes) ->
                 case ds of wild { SpaceJunk.Cubes ds1 ds2 -> ds2 }) -}
bcd2c31c8404cf8ac6c60e7a018b19db
  startGame :: SpaceJunk.Images -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,U(U,U,U,U,U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                SpaceJunk.startGame1
                  `cast`
                (<SpaceJunk.Images>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
66e874a031ddd3eb029e1a71ffd8c2eb
  startGame1 ::
    SpaceJunk.Images
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U(U,U,U,U,U,U)><S,U>,
     Unfolding: (\ (images :: SpaceJunk.Images)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Graphics.Gloss.Internals.Interface.Game.playWithBackendIO1
                        @ SpaceJunk.GameState
                        @ Graphics.Gloss.Internals.Interface.Backend.GLUT.GLUTState
                        Graphics.Gloss.Internals.Interface.Backend.GLUT.$fBackendGLUTState
                        Graphics.Gloss.Internals.Interface.Backend.GLUT.glutStateInit
                        Graphics.Gloss.Data.Display.FullScreen
                        Graphics.Gloss.Data.Color.white
                        SpaceJunk.makeStepFeatures2
                        SpaceJunk.initGame
                        (\ (x :: SpaceJunk.GameState)
                           (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         (# s1, SpaceJunk.drawGameState images x #))
                          `cast`
                        (<SpaceJunk.GameState>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Graphics.Gloss.Internals.Data.Picture.Picture>_R))
                        SpaceJunk.startGame3
                          `cast`
                        (<Graphics.Gloss.Internals.Interface.Event.Event>_R
                         ->_R <SpaceJunk.GameState>_R
                         ->_R Sym (GHC.Types.N:IO[0] <SpaceJunk.GameState>_R))
                        SpaceJunk.startGame2
                          `cast`
                        (<GHC.Types.Float>_R
                         ->_R <SpaceJunk.GameState>_R
                         ->_R Sym (GHC.Types.N:IO[0] <SpaceJunk.GameState>_R))
                        GHC.Types.True
                        s of ds1 { (#,#) ipv ipv1 ->
                 (# ipv, GHC.Tuple.() #) }) -}
c683766ad60d68f5351ff3ceff257362
  startGame2 ::
    GHC.Types.Float
    -> SpaceJunk.GameState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, SpaceJunk.GameState #)
  {- Arity: 3, HasNoCafRefs, Strictness: <L,A><L,U><S,U>,
     Unfolding: InlineRule (3, True, True)
                (\ (time :: GHC.Types.Float)
                   (world1 :: SpaceJunk.GameState)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 (# s1, world1 #)) -}
56cf4e6a16f14ae628df16a567168a63
  startGame3 ::
    Graphics.Gloss.Internals.Interface.Event.Event
    -> SpaceJunk.GameState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, SpaceJunk.GameState #)
  {- Arity: 3, Strictness: <L,1*U><L,1*U(U,U(U),U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ (event :: Graphics.Gloss.Internals.Interface.Event.Event)
                   (world1 :: SpaceJunk.GameState)[OneShot]
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s1, SpaceJunk.handleGame event world1 #)) -}
36393e429264b05da1800970e4546191
  streetMove :: SpaceJunk.GameState -> SpaceJunk.GameState
  {- Arity: 1, Strictness: <S(SS(S)LLSL),1*U(U,U(U),U,U,U,U)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: SpaceJunk.GameState) ->
                 case w of ww { SpaceJunk.GameState ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case ww2 of ww7 { GHC.Types.I# ww8 ->
                 case GHC.List.$w!!
                        @ SpaceJunk.Player
                        ww1
                        (GHC.Prim.-#
                           ww8
                           1#) of wild { SpaceJunk.Player ds ds1 ds2 ds3 ds4 ->
                 case ds3 of wild1 { GHC.Types.I# x ->
                 case GHC.List.$w!!
                        @ SpaceJunk.Street
                        ww5
                        (GHC.Prim.-#
                           x
                           1#) of wild2 { SpaceJunk.Street ds5 ds6 ds7 ds8 ds9 ->
                 case ds7 of wild3 {
                   GHC.Types.False
                   -> SpaceJunk.GameState ww1 (GHC.Types.I# ww8) ww3 ww4 ww5 ww6
                   GHC.Types.True
                   -> case SpaceJunk.$wpayTax
                             ww1
                             (GHC.Types.I# ww8)
                             ww3
                             ww4
                             ww5
                             ww6
                             ds8 of ww9 { (#,,,,,#) ww10 ww11 ww12 ww13 ww14 ww15 ->
                      SpaceJunk.GameState ww10 ww11 ww12 ww13 ww14 ww15 } } } } } } }) -}
63ff3c3451c06f0ee2c60246a1c7a5c6
  text2 :: SpaceJunk.ChanceCard -> GHC.Base.String
  RecSel Left SpaceJunk.ChanceCard
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: SpaceJunk.ChanceCard) ->
                 case ds of wild { SpaceJunk.ChanceCard ds1 ds2 ds3 -> ds3 }) -}
6c575e4389a09fe86b2b6bc408b35ae7
  throwCubes :: SpaceJunk.GameState -> SpaceJunk.GameState
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U,A,U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (gameState :: SpaceJunk.GameState) ->
                 case gameState of wild { SpaceJunk.GameState ds ds1 ds2 ds3 ds4 ds5 ->
                 SpaceJunk.GameState ds ds1 ds2 SpaceJunk.doStep1 ds4 ds5 }) -}
8b5d96e2da0cc4325a8c4232fed1f2ac
  typeStep :: SpaceJunk.GameState -> GHC.Base.String
  RecSel Left SpaceJunk.GameState
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLS),1*U(A,A,A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: SpaceJunk.GameState) ->
                 case ds of wild { SpaceJunk.GameState ds1 ds2 ds3 ds4 ds5 ds6 ->
                 ds6 }) -}
c6af02d289c5bf7f87c25f55a068c22b
  ufoAccel :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.F# 15.0#) -}
a1e73e1748fbfc428f0ffe89f21b1390
  updateGameState ::
    GHC.Types.Float -> SpaceJunk.GameState -> SpaceJunk.GameState
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: GHC.Types.Float) -> GHC.Base.id @ SpaceJunk.GameState) -}
40391efd9b8d041b13352bad5370992e
  updatePay ::
    GHC.Types.Float -> SpaceJunk.GameState -> SpaceJunk.GameState
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: GHC.Types.Float) -> GHC.Base.id @ SpaceJunk.GameState) -}
instance SpaceJunk.Physical [SpaceJunk.Player]
  = SpaceJunk.$fPhysicalPlayer
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

